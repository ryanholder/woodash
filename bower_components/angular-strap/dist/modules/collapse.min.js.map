{"version":3,"file":"collapse.min.js","sources":["collapse/collapse.js"],"names":["angular","module","provider","defaults","this","animation","disallowToggle","activeClass","controller","$scope","$element","$attrs","self","$options","copy","forEach","key","isDefined","$toggles","$targets","$viewChangeListeners","$registerToggle","element","push","$registerTarget","$active","$setActive","value","fn","$get","$collapse","directive","$window","$animate","require","link","scope","attrs","controllers","ngModelCtrl","bsCollapseCtrl","$setViewValue","$formatters","modelValue","attr","on","index","bsCollapseToggle","indexOf","$apply","render","active","addClass"],"mappings":"AAOA,YACAA,SAAQC,OAAO,8BAA+BC,SAAS,YAAa,WAClE,GAAIC,GAAWC,KAAKD,UAChBE,UAAW,cACXC,gBAAgB,EAChBC,YAAa,MAEbC,EAAaJ,KAAKI,WAAa,SAAUC,EAAQC,EAAUC,GAC3D,GAAIC,GAAOR,IAEXQ,GAAKC,SAAWb,QAAQc,KAAKX,GAC7BH,QAAQe,SACN,YACA,iBACA,eACC,SAAUC,GACPhB,QAAQiB,UAAUN,EAAOK,MAC3BJ,EAAKC,SAASG,GAAOL,EAAOK,MAEhCJ,EAAKM,YACLN,EAAKO,YACLP,EAAKQ,wBACLR,EAAKS,gBAAkB,SAAUC,GAC/BV,EAAKM,SAASK,KAAKD,IAErBV,EAAKY,gBAAkB,SAAUF,GAC/BV,EAAKO,SAASI,KAAKD,IAErBV,EAAKO,SAASM,QAAU,EACxBb,EAAKc,WAAajB,EAAOiB,WAAa,SAAUC,GAI5Cf,EAAKO,SAASM,QAHXb,EAAKC,SAASP,eAGOqB,EAFAf,EAAKO,SAASM,UAAYE,EAAQ,GAAKA,EAIjEf,EAAKQ,qBAAqBL,QAAQ,SAAUa,GAC1CA,OAIRxB,MAAKyB,KAAO,WACV,GAAIC,KAGJ,OAFAA,GAAU3B,SAAWA,EACrB2B,EAAUtB,WAAaA,EAChBsB,KAERC,UAAU,cACX,UACA,WACA,YACA,SAAUC,EAASC,EAAUH,GACZA,EAAU3B,QACzB,QACE+B,SACE,WACA,cAEF1B,WAAYsB,EAAUtB,WACtB2B,KAAM,SAAkBC,EAAOd,EAASe,EAAOC,GAC7C,GAAIC,GAAcD,EAAY,GAC1BE,EAAiBF,EAAY,EAC7BC,KAEFC,EAAepB,qBAAqBG,KAAK,WACvCgB,EAAYE,cAAcD,EAAerB,SAASM,WAGpDc,EAAYG,YAAYnB,KAAK,SAAUoB,GAGrC,MADAH,GAAed,WAAwB,EAAbiB,GACnBA,UAMhBZ,UAAU,mBAAoB,WAC/B,OACEG,SACE,YACA,eAEFC,KAAM,SAAkBC,EAAOd,EAASe,EAAOC,GAC7C,GACIE,IADcF,EAAY,GACTA,EAAY,GAEjChB,GAAQsB,KAAK,cAAe,YAE5BJ,EAAenB,gBAAgBC,GAC/BA,EAAQuB,GAAG,QAAS,WAClB,GAAIC,GAAQT,EAAMU,kBAAoBP,EAAetB,SAAS8B,QAAQ1B,EACtEkB,GAAed,WAAmB,EAARoB,GAC1BV,EAAMa,eAIXlB,UAAU,oBACX,WACA,SAAUE,GACR,OACEC,SACE,YACA,eAEFC,KAAM,SAAkBC,EAAOd,EAASe,EAAOC,GAW7C,QAASY,KACP,GAAIJ,GAAQN,EAAerB,SAAS6B,QAAQ1B,GACxC6B,EAASX,EAAerB,SAASM,OACrCQ,GAASa,IAAUK,EAAS,WAAa,eAAe7B,EAASkB,EAAe3B,SAASN,aAb3F,GACIiC,IADcF,EAAY,GACTA,EAAY,GAEjChB,GAAQ8B,SAAS,YAEbZ,EAAe3B,SAASR,WAC1BiB,EAAQ8B,SAASZ,EAAe3B,SAASR,WAG3CmC,EAAehB,gBAAgBF,GAM/BkB,EAAepB,qBAAqBG,KAAK,WACvC2B,MAEFA","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.collapse', [])\n\n  .provider('$collapse', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-collapse',\n      disallowToggle: false,\n      activeClass: 'in'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'disallowToggle', 'activeClass'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      self.$toggles = [];\n      self.$targets = [];\n\n      self.$viewChangeListeners = [];\n\n      self.$registerToggle = function(element) {\n        self.$toggles.push(element);\n      };\n      self.$registerTarget = function(element) {\n        self.$targets.push(element);\n      };\n\n      self.$targets.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        if(!self.$options.disallowToggle) {\n          self.$targets.$active = self.$targets.$active === value ? -1 : value;\n        } else {\n          self.$targets.$active = value;\n        }\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $collapse = {};\n      $collapse.defaults = defaults;\n      $collapse.controller = controller;\n      return $collapse;\n    };\n\n  })\n\n  .directive('bsCollapse', function($window, $animate, $collapse) {\n\n    var defaults = $collapse.defaults;\n\n    return {\n      require: ['?ngModel', 'bsCollapse'],\n      controller: $collapse.controller,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        if(ngModelCtrl) {\n\n          // Update the modelValue following\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$targets.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsCollapseCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseToggle', function() {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base attr\n        element.attr('data-toggle', 'collapse');\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerToggle(element);\n        element.on('click', function() {\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\n          bsCollapseCtrl.$setActive(index * 1);\n          scope.$apply();\n        });\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseTarget', function($animate) {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      // scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('collapse');\n\n        // Add animation class\n        if(bsCollapseCtrl.$options.animation) {\n          element.addClass(bsCollapseCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerTarget(element);\n\n        function render() {\n          var index = bsCollapseCtrl.$targets.indexOf(element);\n          var active = bsCollapseCtrl.$targets.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsCollapseCtrl.$options.activeClass);\n        }\n\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}