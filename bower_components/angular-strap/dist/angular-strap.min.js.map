{"version":3,"file":"angular-strap.min.js","sources":["module.js","affix/affix.js","aside/aside.js","alert/alert.js","button/button.js","collapse/collapse.js","datepicker/datepicker.js","dropdown/dropdown.js","helpers/date-parser.js","helpers/debounce.js","helpers/dimensions.js","helpers/parse-options.js","helpers/raf.js","modal/modal.js","navbar/navbar.js","popover/popover.js","scrollspy/scrollspy.js","select/select.js","timepicker/timepicker.js","tab/tab.js","tooltip/tooltip.js","typeahead/typeahead.js"],"names":[],"mappings":"CAOA,SAAA,EAAA,GACA,YAEA,SAAA,OAAA,kBACA,uBACA,uBACA,uBACA,wBACA,wBACA,4BACA,4BACA,wBACA,yBCnBA,yBACA,0BACA,2BACA,2BACA,uBACA,qBACA,4BAIA,QAAA,OAAA,wBACA,oCACA,oCACA,SAAA,SAAA,WACA,GAAA,GAAA,KAAA,UAAA,UAAA,OACA,MAAA,MACA,UACA,WACA,aACA,SAAA,EAAA,EAAA,GAGA,QAAA,GAAA,EAAA,GA0GA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,IACA,EAAA,GACA,OAAA,IAAA,EACA,MACA,OAAA,GAAA,EAAA,GAAA,EAAA,IACA,SACA,OAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EACA,SAEA,SAGA,QAAA,KACA,MAAA,GAAA,KAAA,EAAA,EAAA,YAAA,EAAA,GAAA,UAEA,QAAA,KACA,MAAA,GAAA,KAAA,EAAA,EAAA,SAAA,KAAA,aAAA,EAAA,GAAA,aA1HA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,GACA,EAAA,EAAA,OAEA,EAAA,+BAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KACA,EAAA,EAAA,QAEA,IAAA,EAAA,aACA,GAAA,EAAA,aAAA,MAAA,SACA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,IACA,EAAA,EAAA,aAGA,GAAA,QAAA,QAAA,EAAA,aA+GA,OA5GA,GAAA,KAAA,WACA,EAAA,gBACA,EAAA,EAAA,OAAA,EAAA,IAAA,IAAA,EAEA,EAAA,GAAA,SAAA,EAAA,eACA,EAAA,GAAA,QAAA,EAAA,4BACA,EAAA,GAAA,SAAA,EAAA,oBAGA,EAAA,gBACA,EAAA,8BAEA,EAAA,QAAA,WAEA,EAAA,IAAA,SAAA,EAAA,eACA,EAAA,IAAA,QAAA,EAAA,4BACA,EAAA,IAAA,SAAA,EAAA,qBAEA,EAAA,2BAAA,WACA,WAAA,EAAA,cAAA,IAEA,EAAA,cAAA,WAEA,GAAA,GAAA,IACA,EAAA,EAAA,OAAA,EAAA,IACA,EAAA,EAAA,OAAA,EAAA,IAEA,EAAA,EAAA,EAAA,EAAA,EAEA,KAAA,IAEA,EAAA,EAEA,EAAA,YAAA,GAAA,SAAA,SAAA,WAAA,EAAA,IAAA,EAAA,KACA,QAAA,GACA,EAAA,KACA,EAAA,IAAA,WAAA,EAAA,aAAA,GAAA,YACA,EAAA,IAAA,MAAA,KACA,WAAA,GAEA,EADA,EAAA,cACA,EAAA,EAAA,aAIA,EAAA,IAAA,EAEA,EAAA,IAAA,WAAA,EAAA,aAAA,GAAA,YACA,EAAA,IAAA,MAAA,EAAA,aAAA,GAAA,EAAA,GAAA,aAAA,EAAA,EAAA,EAAA,QAGA,EAAA,KACA,EAAA,IAAA,WAAA,SACA,EAAA,IAAA,MAAA,EAAA,SAGA,EAAA,UAAA,WACA,EAAA,gBACA,EAAA,iBAEA,EAAA,mBAAA,EAAA,EAAA,UAAA,IACA,EAAA,cAAA,WAEA,EAAA,IAAA,WAAA,EAAA,aAAA,GAAA,YACA,EAAA,YACA,SAAA,EAAA,YACA,EAAA,UAAA,MAEA,EAAA,UAAA,MAAA,cACA,EAAA,GAAA,EAAA,UAEA,EADA,EAAA,aACA,EAAA,OAAA,EAAA,IAAA,IAAA,EAAA,EAAA,UAEA,EAAA,OAAA,EAAA,IAAA,IAAA,EAAA,IAAA,EAAA,GAAA,aAAA,GAAA,EAAA,EAAA,WAGA,EAAA,EAAA,EAAA,WAGA,EAAA,eAGA,EAFA,EAAA,cAAA,EAAA,aAAA,MAAA,aAEA,KAAA,EAAA,OAAA,EAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,EAAA,aAAA,EAEA,EAAA,EAAA,eAwBA,EAAA,OACA,EAhIA,GAAA,GAAA,QAAA,QAAA,EAAA,SAAA,MACA,EAAA,QAAA,QAAA,EAiIA,OAAA,OAGA,UAAA,WACA,SACA,UACA,SAAA,EAAA,GACA,OACA,SAAA,MACA,QAAA,kBACA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,IACA,MAAA,EACA,UAAA,OACA,OAAA,EAAA,EAAA,SAAA,QAAA,QAAA,GAEA,SAAA,SACA,YACA,eACA,eACA,eACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,KAEA,IAAA,GAAA,EAAA,EAAA,EACA,GAAA,IAAA,WAAA,WACA,GAAA,EAAA,UACA,EAAA,KACA,EAAA,YAKA,UAAA,gBAAA,WACA,OCzLA,YACA,WACA,SAAA,GACA,KAAA,SAAA,OAOA,QAAA,OAAA,wBAAA,yBAAA,SAAA,SAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,0BACA,YAAA,QACA,UAAA,QACA,SAAA,uBACA,iBAAA,EACA,WAAA,EACA,QAAA,KACA,UAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EAEA,MAAA,MACA,SACA,SAAA,GACA,QAAA,GAAA,GACA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,EAEA,OADA,GAAA,EAAA,GAGA,MAAA,OAGA,UAAA,WACA,UACA,OACA,SACA,SAAA,EAAA,EAAA,GACA,EAAA,uBAAA,EAAA,UACA,QACA,SAAA,MACA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,IACA,MAAA,EACA,QAAA,EACA,MAAA,EAEA,SAAA,SACA,WACA,kBACA,YACA,WACA,WACA,OACA,YACA,aACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,QAAA,SACA,QACA,WACA,SAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,SAAA,GACA,EAAA,GAAA,EAAA,YAAA,OAIA,EAAA,SAAA,EAAA,OAAA,EAAA,QAAA,SAAA,GACA,QAAA,SAAA,GACA,QAAA,OAAA,EAAA,GAEA,EAAA,QAAA,IAEA,EAEA,IAAA,GAAA,EAAA,EAEA,GAAA,GAAA,EAAA,SAAA,QAAA,EAAA,QAEA,EAAA,IAAA,WAAA,WACA,GCzFA,EAAA,UACA,EAAA,KACA,EAAA,YAWA,QAAA,OAAA,wBAAA,yBAAA,SAAA,SAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,QACA,UAAA,KACA,SAAA,uBACA,WAAA,EACA,QAAA,KACA,UAAA,EACA,UAAA,EACA,MAAA,EACA,UAAA,EACA,MAAA,EACA,aAAA,EAEA,MAAA,MACA,SACA,WACA,SAAA,EAAA,GACA,QAAA,GAAA,GACA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,EACA,GAAA,EAAA,GAEA,EAAA,OAAA,cAAA,EAAA,YACA,EAAA,OACA,EAAA,OAAA,KAAA,EAAA,KAGA,IAAA,GAAA,EAAA,IASA,OARA,GAAA,WACA,EAAA,KAAA,WACA,IACA,EAAA,WACA,EAAA,QACA,IAAA,EAAA,YAGA,EAEA,MAAA,OAGA,UAAA,WACA,UACA,OACA,SACA,SAAA,EAAA,EAAA,GACA,EAAA,uBAAA,EAAA,UACA,QACA,SAAA,MACA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,IACA,MAAA,EACA,QAAA,EACA,MAAA,EAEA,SAAA,SACA,WACA,YACA,WACA,OACA,YACA,YACA,WACA,eACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,QAAA,SACA,QACA,UACA,QACA,SAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,SAAA,GACA,EAAA,GAAA,EAAA,YAAA,OAIA,EAAA,SAAA,EAAA,OAAA,EAAA,QAAA,SAAA,GACA,QAAA,SAAA,GACA,QAAA,OAAA,EAAA,GAEA,EAAA,QAAA,IAEA,EAEA,IAAA,GAAA,EAAA,EAEA,GAAA,GAAA,EAAA,SAAA,QAAA,EAAA,QAEA,EAAA,IAAA,WAAA,WACA,GC9GA,EAAA,UACA,EAAA,KACA,EAAA,YAQA,QAAA,OAAA,4BAAA,SAAA,UAAA,WACA,GAAA,GAAA,KAAA,UACA,YAAA,SACA,YAAA,QAEA,MAAA,KAAA,WACA,OAAA,SAAA,MAEA,UAAA,kBAAA,WACA,OACA,SAAA,IACA,QAAA,UACA,QAAA,SAAA,EAAA,GACA,EAAA,KAAA,cAAA,WACA,EAAA,WAAA,WACA,IAAA,GAAA,EAAA,GAAA,iBAAA,yBACA,SAAA,QAAA,EAAA,SAAA,GACA,GAAA,GAAA,QAAA,QAAA,EACA,GAAA,KAAA,cAAA,IACA,EAAA,KAAA,WAAA,EAAA,QAAA,IAAA,EAAA,KAAA,gBAIA,UAAA,cACA,UACA,QACA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,SACA,EAAA,oBACA,QACA,SAAA,IACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAEA,EAAA,UAAA,EAAA,GAAA,SACA,EAAA,EAAA,EAAA,SAAA,EACA,EAAA,QAAA,UAAA,EAAA,WAAA,EAAA,WAAA,CACA,GAAA,KAAA,EAAA,aACA,EAAA,EAAA,MAAA,EAAA,WAEA,IAAA,GAAA,QAAA,UAAA,EAAA,YAAA,EAAA,YAAA,CACA,GAAA,KAAA,EAAA,cACA,EAAA,EAAA,MAAA,EAAA,YAGA,IAAA,GAAA,iBAAA,IAAA,iBAAA,EACA,KACA,EAAA,SAAA,KAAA,SAAA,GAEA,MAAA,GAAA,EAAA,IAGA,EAAA,OAAA,EAAA,QAAA,WACA,EAAA,aAIA,EAAA,QAAA,WAEA,GAAA,GAAA,QAAA,OAAA,EAAA,YAAA,EACA,GAAA,WACA,IACA,EAAA,GAAA,QAAA,GACA,EAAA,YAAA,EAAA,YAAA,MAIA,EAAA,KAAA,EAAA,YAAA,WACA,EAAA,OAAA,WAEA,GACA,EAAA,eAAA,EAAA,SAAA,WAEA,GACA,EAAA,mBAOA,UAAA,eAAA,WACA,OACA,SAAA,IACA,QAAA,UACA,QAAA,SAAA,EAAA,GACA,EAAA,KAAA,cAAA,WACA,EAAA,WAAA,WACA,IAAA,GAAA,EAAA,GAAA,iBAAA,sBACA,SAAA,QAAA,EAAA,SAAA,GACA,QAAA,QAAA,GAAA,KAAA,WAAA,IACA,QAAA,QAAA,GAAA,KAAA,WAAA,EAAA,eAIA,UAAA,WACA,UACA,QACA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,SACA,EAAA,oBACA,QACA,SAAA,IACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAEA,EAAA,UAAA,EAAA,GAAA,SACA,EAAA,EAAA,EAAA,SAAA,EACA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAEA,GAAA,QAAA,WAEA,GAAA,GAAA,QAAA,OAAA,EAAA,YAAA,EACA,GAAA,WACA,IACA,EAAA,GAAA,QAAA,GACA,EAAA,YAAA,EAAA,YAAA,MAIA,EAAA,KAAA,EAAA,YAAA,WACA,EAAA,OAAA,WCrIA,EAAA,cAAA,GACA,EAAA,mBASA,QAAA,OAAA,8BAAA,SAAA,YAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,cACA,gBAAA,EACA,YAAA,MAEA,EAAA,KAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,IAEA,GAAA,SAAA,QAAA,KAAA,GACA,QAAA,SACA,YACA,iBACA,eACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,SAAA,GAAA,EAAA,MAEA,EAAA,YACA,EAAA,YACA,EAAA,wBACA,EAAA,gBAAA,SAAA,GACA,EAAA,SAAA,KAAA,IAEA,EAAA,gBAAA,SAAA,GACA,EAAA,SAAA,KAAA,IAEA,EAAA,SAAA,QAAA,EACA,EAAA,WAAA,EAAA,WAAA,SAAA,GAIA,EAAA,SAAA,QAHA,EAAA,SAAA,eAGA,EAFA,EAAA,SAAA,UAAA,EAAA,GAAA,EAIA,EAAA,qBAAA,QAAA,SAAA,GACA,OAIA,MAAA,KAAA,WACA,GAAA,KAGA,OAFA,GAAA,SAAA,EACA,EAAA,WAAA,EACA,KAEA,UAAA,cACA,UACA,WACA,YACA,SAAA,EAAA,EAAA,GACA,EAAA,QACA,QACA,SACA,WACA,cAEA,WAAA,EAAA,WACA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,EACA,KAEA,EAAA,qBAAA,KAAA,WACA,EAAA,cAAA,EAAA,SAAA,WAGA,EAAA,YAAA,KAAA,SAAA,GAGA,MADA,GAAA,WAAA,EAAA,GACA,UAMA,UAAA,mBAAA,WACA,OACA,SACA,YACA,eAEA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GACA,IADA,EAAA,GACA,EAAA,GAEA,GAAA,KAAA,cAAA,YAEA,EAAA,gBAAA,GACA,EAAA,GAAA,QAAA,WACA,GAAA,GAAA,EAAA,kBAAA,EAAA,SAAA,QAAA,EACA,GAAA,WAAA,EAAA,GACA,EAAA,eAIA,UAAA,oBACA,WACA,SAAA,GACA,OACA,SACA,YACA,eAEA,KAAA,SAAA,EAAA,EAAA,EAAA,GAWA,QAAA,KACA,GAAA,GAAA,EAAA,SAAA,QAAA,GACA,EAAA,EAAA,SAAA,OACA,GAAA,IAAA,EAAA,WAAA,eAAA,EAAA,EAAA,SAAA,aAbA,GACA,IADA,EAAA,GACA,EAAA,GAEA,GAAA,SAAA,YAEA,EAAA,SAAA,WACA,EAAA,SAAA,EAAA,SAAA,WAGA,EAAA,gBAAA,GC3HA,EAAA,qBAAA,KAAA,WACA,MAEA,SAOA,QAAA,OAAA,6BACA,oCACA,2BACA,SAAA,cAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,aACA,UAAA,cACA,SAAA,iCACA,QAAA,QACA,WAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EACA,WAAA,EACA,SAAA,OACA,WAAA,YACA,gBAAA,KACA,UAAA,KACA,cAAA,EACA,WAAA,EACA,SAAA,IACA,SAAA,IACA,UAAA,EACA,QAAA,EACA,UAAA,EACA,mBAAA,GACA,SAAA,mCACA,UAAA,oCAEA,MAAA,MACA,UACA,YACA,aACA,OACA,UACA,aACA,kBACA,WACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAMA,QAAA,GAAA,EAAA,EAAA,GAiIA,QAAA,GAAA,GACA,EAAA,SAAA,EAAA,YAAA,EAAA,MAEA,QAAA,KACA,EAAA,GAAA,QApIA,GAAA,GAAA,EAAA,EAAA,QAAA,UAAA,EAAA,IACA,EAAA,EAAA,MACA,EAAA,EAAA,SACA,EAAA,EAAA,MACA,GAAA,YACA,EAAA,WAAA,EAAA,QAEA,IAAA,GAAA,EAAA,EACA,GAAA,OAAA,EAAA,KACA,IAAA,GAAA,EAAA,QACA,GAAA,MAAA,EAAA,UACA,EAAA,UAAA,EAAA,SACA,EAAA,WAAA,EAAA,SACA,IAAA,GAAA,EAAA,OAAA,EAAA,MAEA,GAAA,QAAA,SAAA,GACA,EAAA,OAAA,IAEA,EAAA,YAAA,SAAA,GACA,EAAA,YAAA,IAEA,EAAA,YAAA,WACA,EAAA,SAAA,EAAA,MAAA,GAAA,EAAA,OAAA,SAGA,EAAA,OAAA,SAAA,GAEA,QAAA,OAAA,KAAA,MAAA,EAAA,aACA,EAAA,MAAA,EACA,EAAA,OAAA,KAAA,EAAA,IAGA,EAAA,QAAA,IAEA,EAAA,oBAAA,SAAA,GACA,EAAA,mBAAA,CACA,KAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,IACA,QAAA,QAAA,EAAA,KAAA,GAAA,EAAA,iBAGA,EAAA,OAAA,SAAA,EAAA,GAEA,QAAA,OAAA,EAAA,cACA,EAAA,WAAA,GAAA,MAAA,KACA,EAAA,OAAA,GACA,EAAA,cAAA,QAAA,KAAA,IACA,EAAA,UACA,EAAA,YAAA,GACA,EAAA,MAAA,KAGA,QAAA,OAAA,GACA,KAAA,EAAA,cACA,MAAA,EAAA,WACA,KAAA,EAAA,YAEA,EAAA,QAAA,EAAA,MAAA,GACA,EAAA,WAGA,EAAA,QAAA,SAAA,GAEA,EAAA,MAAA,EACA,EAAA,EAAA,OAAA,EAAA,OACA,EAAA,UAGA,EAAA,OAAA,SAAA,GAEA,KAAA,GAAA,EAAA,QAEA,KAAA,GAAA,EAAA,QAEA,EAAA,MAAA,KAAA,IAEA,EAAA,gBAAA,WACA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,IACA,QAAA,QAAA,EAAA,KAAA,GAAA,IAGA,EAAA,YAAA,SAAA,GACA,MAAA,GAAA,WAAA,IAEA,EAAA,eAAA,SAAA,GACA,EAAA,SAAA,EAAA,WAAA,EAAA,OAEA,EAAA,YAAA,SAAA,GACA,GAAA,GAAA,EAAA,MACA,EAAA,GAAA,MAAA,KAAA,IAAA,EAAA,MAAA,EAAA,MAAA,GAAA,EAAA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,EAAA,MAAA,EAAA,KAAA,GAAA,GACA,SAAA,OAAA,GACA,KAAA,EAAA,iBACA,MAAA,EAAA,cACA,KAAA,EAAA,eAEA,EAAA,UAEA,EAAA,aAAA,SAAA,GAKA,GAHA,EAAA,iBACA,EAAA,kBAEA,EAAA,CACA,GAAA,GAAA,QAAA,QAAA,EAAA,OACA,YAAA,EAAA,GAAA,SAAA,gBACA,EAAA,EAAA,UAEA,EAAA,eAAA,WAGA,EAAA,WAAA,SAAA,GACA,GAAA,mBAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,OAAA,CAIA,GAFA,EAAA,iBACA,EAAA,kBACA,KAAA,EAAA,QACA,MAAA,GAAA,MAGA,EAAA,OAAA,WACA,EAAA,QAAA,EAAA,MAAA,KAHA,EAAA,MAAA,EAQA,GAAA,UAAA,GACA,EAAA,WAUA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,MAAA,IAAA,EAAA,WACA,EAAA,KAAA,OAAA,YACA,GAAA,IAAA,qBAAA,eAEA,IACA,EAAA,KAAA,OAAA,QACA,EAAA,KAAA,WAAA,QACA,EAAA,GAAA,QAAA,QAEA,MAEA,IAAA,GAAA,EAAA,OACA,GAAA,QAAA,WACA,GAAA,EAAA,WACA,EAAA,IAAA,QAAA,GAEA,IAEA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,IACA,WAAA,WACA,EAAA,SAAA,GAAA,EAAA,aAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,GAAA,UAAA,EAAA,cAIA,IAAA,GAAA,EAAA,IAQA,OAPA,GAAA,KAAA,SAAA,GACA,EAAA,SAAA,IAAA,EAAA,aAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,IAAA,UAAA,EAAA,YAEA,EAAA,IAEA,EAnLA,GACA,IADA,QAAA,QAAA,EAAA,SAAA,MACA,8BAAA,KAAA,EAAA,UAAA,YACA,EAAA,eAAA,GAAA,UAAA,CAoLA,OAnLA,GAAA,OACA,EAAA,KAAA,EAAA,IAiLA,EAAA,SAAA,EACA,MAGA,UAAA,gBACA,UACA,SACA,KACA,UACA,aACA,cACA,cACA,WACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GACA,IADA,EAAA,SACA,8BAAA,KAAA,EAAA,UAAA,YACA,EAAA,SAAA,GACA,OAAA,MAAA,WAAA,KAAA,SAAA,GAEA,QACA,SAAA,MACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAgFA,QAAA,GAAA,GACA,MAAA,IAAA,EAAA,OAEA,EADA,KAhFA,GAAA,IACA,MAAA,EACA,WAAA,EAEA,SAAA,SACA,YACA,YACA,QACA,UACA,WACA,OACA,YACA,WACA,YACA,WACA,aACA,kBACA,YACA,eACA,YACA,YACA,YACA,OACA,YACA,UACA,WACA,YACA,sBACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,SAAA,GACA,GAAA,QAAA,UAAA,KAEA,QAAA,SAAA,KACA,IAAA,EAAA,MAAA,qBACA,KAAA,EAAA,EAAA,OAAA,EAAA,SAGA,IAAA,GAAA,EAAA,EAAA,EAAA,EACA,GAAA,EAAA,SAEA,GAAA,EAAA,YACA,EAAA,WAAA,cAEA,QAAA,SACA,UACA,WACA,SAAA,GAEA,QAAA,UAAA,EAAA,KAAA,EAAA,SAAA,EAAA,SAAA,GAEA,GAAA,UAAA,EAAA,CACA,GAAA,GAAA,GAAA,KACA,GAAA,SAAA,IAAA,GAAA,MAAA,EAAA,cAAA,EAAA,WAAA,EAAA,WAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAGA,GAAA,SAAA,GAFA,QAAA,SAAA,IAAA,EAAA,MAAA,WAEA,GAAA,MAAA,EAAA,OAAA,EAAA,EAAA,OAAA,IACA,EAAA,IACA,GAAA,MAAA,SAAA,EAAA,KACA,QAAA,SAAA,IAAA,IAAA,EAAA,OAEA,YAAA,GAAA,KAAA,KAEA,GAAA,MAAA,IAGA,MAAA,EAAA,SAAA,KAAA,EAAA,QAAA,OAIA,EAAA,OAAA,EAAA,QAAA,WACA,EAAA,OAAA,EAAA,cACA,GAQA,QAAA,UAAA,EAAA,gBACA,EAAA,OAAA,EAAA,cAAA,SAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,IAAA,GACA,EAAA,oBAAA,IAIA,IAAA,GAAA,GACA,OAAA,EAAA,WACA,KAAA,EAAA,KACA,OAAA,EAAA,cAGA,GAAA,SAAA,QAAA,SAAA,GAGA,IAAA,EAEA,WADA,GAAA,aAAA,QAAA,EAGA,IAAA,GAAA,EAAA,MAAA,EAAA,EAAA,WACA,KAAA,GAAA,MAAA,EAAA,WAEA,WADA,GAAA,aAAA,QAAA,EAGA,IAAA,GAAA,MAAA,EAAA,SAAA,UAAA,EAAA,WAAA,EAAA,SAAA,QACA,EAAA,MAAA,EAAA,SAAA,UAAA,EAAA,WAAA,EAAA,SAAA,QACA,EAAA,GAAA,CAQA,OAPA,GAAA,aAAA,OAAA,GACA,EAAA,aAAA,MAAA,GACA,EAAA,aAAA,MAAA,GAEA,IACA,EAAA,WAAA,GAEA,WAAA,EAAA,SACA,EAAA,EAAA,EAAA,iBAAA,EAAA,YACA,WAAA,EAAA,SACA,EAAA,WAAA,UACA,QAAA,EAAA,SACA,EAAA,WAAA,cAEA,GAAA,MAAA,EAAA,cAIA,EAAA,YAAA,KAAA,SAAA,GAEA,GAAA,EAgBA,OAdA,GADA,QAAA,YAAA,IAAA,OAAA,EACA,IACA,QAAA,OAAA,GACA,EACA,WAAA,EAAA,SACA,EAAA,MAAA,EAAA,KAAA,EAAA,iBAEA,GAAA,MAAA,GAOA,EAAA,WAAA,EACA,EAAA,aAGA,EAAA,QAAA,WAEA,EAAA,KAAA,EAAA,YAAA,MAAA,EAAA,WAAA,WAAA,GAAA,EAAA,EAAA,WAAA,EAAA,cAGA,EAAA,IAAA,WAAA,WACA,GACA,EAAA,UACA,EAAA,KACA,EAAA,YAKA,SAAA,kBAAA,WAMA,QAAA,GAAA,EAAA,GAEA,IADA,GAAA,MACA,EAAA,OAAA,GACA,EAAA,KAAA,EAAA,OAAA,EAAA,GAEA,OAAA,GAGA,QAAA,GAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAdA,KAAA,UACA,UAAA,KACA,SAAA,EAcA,MAAA,MACA,UACA,OACA,aACA,SAAA,EAAA,EAAA,GACA,MAAA,UAAA,GACA,GAAA,GAAA,EAAA,OACA,EAAA,EAAA,SACA,EAAA,EAAA,iBAAA,SACA,EAAA,EAAA,MAAA,EAAA,WAAA,OAAA,EAAA,MAAA,EAAA,EAAA,YACA,EAAA,EAAA,YAAA,+BAAA,EAAA,KAAA,qCAAA,SACA,EAAA,EAAA,QAAA,EAAA,UAAA,GAAA,MAAA,EAAA,WAAA,GAAA,OACA,GACA,KAAA,EAAA,cACA,MAAA,EAAA,WACA,KAAA,EAAA,WAGA,GADA,IAAA,EAAA,sBAGA,OAAA,EAAA,UACA,MAAA,EACA,OAAA,MAAA,GACA,OAAA,SAAA,EAAA,IACA,KAAA,OAAA,GAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,aAAA,EAAA,OACA,QAAA,OAAA,GACA,KAAA,EAAA,MAAA,cACA,MAAA,EAAA,MAAA,WACA,KAAA,EAAA,MAAA,YAEA,EAAA,UACA,EAAA,YAAA,EAAA,OACA,EAAA,KAAA,EAAA,MAAA,UACA,EAAA,oBAGA,MAAA,WACA,GAAA,GAAA,GAAA,MAAA,EAAA,KAAA,EAAA,MAAA,GAAA,EAAA,EAAA,oBACA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,UAAA,IAAA,EAAA,EAAA,oBACA,GAAA,GAAA,OAAA,cAEA,KAAA,IACA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,IAEA,KAAA,GADA,GAAA,KACA,EAAA,EAAA,GAAA,EAAA,IAEA,EAAA,GAAA,MAAA,EAAA,cAAA,EAAA,WAAA,EAAA,UAAA,GACA,EAAA,MACA,KAAA,EACA,QAAA,EAAA,iBAAA,EACA,MAAA,EAAA,EAAA,KAAA,QACA,SAAA,EAAA,OAAA,KAAA,WAAA,GACA,MAAA,EAAA,aAAA,EAAA,MACA,SAAA,KAAA,WAAA,IAGA,GAAA,MAAA,EAAA,EAAA,aACA,EAAA,YAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,EAAA,EAAA,KAAA,OACA,KAAA,OAAA,GAEA,WAAA,SAAA,GACA,MAAA,GAAA,OAAA,EAAA,gBAAA,EAAA,MAAA,eAAA,EAAA,aAAA,EAAA,MAAA,YAAA,EAAA,YAAA,EAAA,MAAA,WAEA,WAAA,SAAA,GACA,GAAA,GAAA,EAAA,SAEA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,QACA,OAAA,CAEA,IAAA,KAAA,EAAA,mBAAA,QAAA,EAAA,UACA,OAAA,CAEA,IAAA,EAAA,mBACA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,mBAAA,OAAA,IACA,GAAA,GAAA,EAAA,mBAAA,GAAA,MACA,MAAA,IAAA,EAAA,mBAAA,GAAA,KACA,GAGA,CAIA,QAAA,GAEA,UAAA,SAAA,GACA,GACA,GADA,EAAA,EAAA,MAAA,SAEA,MAAA,EAAA,QACA,EAAA,GAAA,MAAA,EAAA,OACA,KAAA,EAAA,QACA,EAAA,GAAA,MAAA,EAAA,QACA,KAAA,EAAA,QACA,EAAA,GAAA,MAAA,EAAA,OACA,KAAA,EAAA,UACA,EAAA,GAAA,MAAA,EAAA,SACA,KAAA,WAAA,IACA,EAAA,OAAA,GAAA,MAIA,KAAA,QACA,OAAA,MACA,MAAA,EACA,OAAA,KAAA,GACA,OAAA,SAAA,GACA,KAAA,OAAA,EAAA,gBAAA,EAAA,KAOA,EAAA,aAAA,EAAA,QACA,QAAA,OAAA,GACA,MAAA,EAAA,MAAA,WACA,KAAA,EAAA,MAAA,YAEA,EAAA,oBAXA,QAAA,OAAA,GACA,KAAA,EAAA,MAAA,cACA,MAAA,EAAA,MAAA,WACA,KAAA,EAAA,MAAA,YAEA,EAAA,WASA,MAAA,WAGA,IAAA,GADA,GAAA,GADA,GAAA,MAAA,EAAA,KAAA,EAAA,OAEA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,MAAA,EAAA,KAAA,EAAA,GACA,EAAA,MACA,KAAA,EACA,MAAA,EAAA,EAAA,KAAA,QACA,SAAA,EAAA,YAAA,GACA,SAAA,KAAA,WAAA,IAGA,GAAA,MAAA,EAAA,EAAA,QACA,EAAA,YAAA,EACA,EAAA,KAAA,EAAA,EAAA,KAAA,OACA,KAAA,OAAA,GAEA,WAAA,SAAA,GACA,MAAA,GAAA,OAAA,EAAA,gBAAA,EAAA,MAAA,eAAA,EAAA,aAAA,EAAA,MAAA,YAEA,WAAA,SAAA,GACA,GAAA,IAAA,GAAA,MAAA,EAAA,cAAA,EAAA,WAAA,EAAA,EACA,OAAA,GAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAEA,UAAA,SAAA,GACA,GAAA,GAAA,EAAA,MAAA,WACA,EAAA,GAAA,MAAA,EAAA,MACA,MAAA,EAAA,QACA,EAAA,SAAA,EAAA,GACA,KAAA,EAAA,QACA,EAAA,SAAA,EAAA,GACA,KAAA,EAAA,QACA,EAAA,SAAA,EAAA,GACA,KAAA,EAAA,SACA,EAAA,SAAA,EAAA,GACA,KAAA,WAAA,IACA,EAAA,OAAA,GAAA,MAIA,KAAA,OACA,OAAA,OACA,MAAA,EACA,OAAA,KAAA,IACA,OAAA,SAAA,EAAA,IACA,KAAA,OAAA,GAAA,SAAA,EAAA,cAAA,GAAA,MAAA,SAAA,EAAA,KAAA,GAAA,KACA,QAAA,OAAA,GACA,KAAA,EAAA,MAAA,cACA,MAAA,EAAA,MAAA,WACA,KAAA,EAAA,MAAA,YAEA,EAAA,UACA,EAAA,gBAAA,EAAA,OACA,QAAA,OAAA,GACA,KAAA,EAAA,MAAA,cACA,MAAA,EAAA,MAAA,WACA,KAAA,EAAA,MAAA,YAEA,EAAA,oBAGA,MAAA,WAGA,IAAA,GADA,GADA,EAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,OACA,KACA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,MAAA,EAAA,EAAA,EAAA,GACA,EAAA,MACA,KAAA,EACA,MAAA,EAAA,EAAA,KAAA,QACA,SAAA,EAAA,YAAA,GACA,SAAA,KAAA,WAAA,IAGA,GAAA,MAAA,EAAA,GAAA,MAAA,IAAA,EAAA,EAAA,OAAA,GAAA,MACA,EAAA,YAAA,EACA,EAAA,KAAA,EAAA,EAAA,KAAA,OACA,KAAA,OAAA,GAEA,WAAA,SAAA,GACA,MAAA,GAAA,OAAA,EAAA,gBAAA,EAAA,MAAA,eAEA,WAAA,SAAA,GACA,GAAA,IAAA,GAAA,MAAA,EAAA,cAAA,EAAA,EAAA,EACA,OAAA,GAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAEA,UAAA,SAAA,GACA,GAAA,GAAA,EAAA,MAAA,cAAA,EAAA,GAAA,MAAA,EAAA,MACA,MAAA,EAAA,QACA,EAAA,QAAA,EAAA,GACA,KAAA,EAAA,QACA,EAAA,QAAA,EAAA,GACA,KAAA,EAAA,QACA,EAAA,QAAA,EAAA,GACA,KAAA,EAAA,SACA,EAAA,QAAA,EAAA,GACA,KAAA,WAAA,IACA,EAAA,OAAA,GAAA,MCjpBA,QACA,MAAA,EAAA,QAAA,MAAA,UAAA,MAAA,KAAA,EAAA,EAAA,SAAA,EACA,SAAA,QAQA,QAAA,OAAA,2BAAA,2BAAA,SAAA,YAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,WACA,UAAA,cACA,SAAA,6BACA,QAAA,QACA,WAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EAEA,MAAA,MACA,UACA,aACA,WACA,SAAA,EAAA,EAAA,GAGA,QAAA,GAAA,EAAA,GAiDA,QAAA,GAAA,GACA,MAAA,GAAA,SAAA,EAAA,GAEA,EAAA,SAAA,EAAA,IAAA,EAAA,OAFA,OAjDA,CAAA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,EACA,GAAA,OAAA,EAAA,OAAA,EAAA,MAAA,QAAA,EAAA,OACA,EAAA,EAAA,EAAA,EACA,IAAA,GAAA,EAAA,QAEA,GAAA,WAAA,SAAA,GACA,GAAA,UAAA,KAAA,EAAA,SAAA,CAEA,EAAA,iBACA,EAAA,iBAEA,IAAA,GAAA,QAAA,QAAA,EAAA,SAAA,GAAA,iBAAA,sBACA,IAAA,EAAA,OAAA,CAEA,GAAA,EACA,SAAA,QAAA,EAAA,SAAA,EAAA,GACA,GAAA,EAAA,KAAA,EAAA,YACA,EAAA,KAGA,KAAA,EAAA,SAAA,EAAA,EACA,IACA,KAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EACA,IACA,QAAA,YAAA,KACA,EAAA,GACA,EAAA,GAAA,GAAA,GAAA,UAGA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,IACA,WAAA,WACA,EAAA,UAAA,EAAA,SAAA,GAAA,UAAA,EAAA,YACA,EAAA,GAAA,QAAA,KAEA,EAAA,SAAA,aAAA,EAAA,SAAA,QAEA,IAAA,GAAA,EAAA,IAaA,OAZA,GAAA,KAAA,WACA,EAAA,UAAA,EAAA,SAAA,IAAA,UAAA,EAAA,YACA,EAAA,IAAA,QAAA,GACA,EAAA,SAAA,aAAA,EAAA,YAAA,QACA,KAQA,EAxDA,GAAA,GAAA,QAAA,QAAA,EAAA,SAAA,MACA,EAAA,QAAA,UAAA,iBAAA,QAAA,UAAA,uBAAA,QAAA,UAAA,oBAAA,QAAA,UAAA,mBAAA,QAAA,UAAA,gBAyDA,OAAA,OAGA,UAAA,cACA,UACA,OACA,YACA,SAAA,EAAA,EAAA,GACA,OACA,SAAA,MACA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,IAAA,MAAA,EACA,SAAA,SACA,YACA,YACA,QACA,UACA,WACA,OACA,YACA,YACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,EAAA,YAAA,EAAA,OAAA,EAAA,WAAA,SAAA,GACA,EAAA,QAAA,IACA,GAEA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,SAAA,GACA,GAAA,QAAA,UAAA,KAEA,QAAA,SAAA,KACA,IAAA,EAAA,MAAA,mBACA,KAAA,EAAA,EAAA,OAAA,EAAA,SAGA,IAAA,GAAA,EAAA,EAAA,EAEA,GAAA,IAAA,WAAA,WACA,GChIA,EAAA,UACA,EAAA,KACA,EAAA,YAQA,QAAA,OAAA,wCAAA,SAAA,eACA,kBACA,WAEA,QAAA,MADA,GAAA,GAAA,KAAA,UAMA,EAAA,KAAA,UACA,OAAA,YACA,QAAA,EAEA,MAAA,MACA,UACA,aACA,SAAA,EAAA,GACA,GAAA,GAAA,SAAA,GAwFA,QAAA,GAAA,GACA,GAAA,GAAA,EAAA,OAAA,KAAA,GACA,KAAA,KAEA,EAAA,CACA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,EAAA,CACA,GAAA,GAAA,EAAA,OAAA,EAAA,GACA,GAAA,EAAA,MAAA,EAAA,IAAA,KAAA,IACA,EAAA,EAAA,MACA,EAAA,GAAA,EAAA,EAAA,KAWA,MANA,SAAA,QAAA,EAAA,SAAA,GAGA,GACA,EAAA,KAAA,KAEA,EAEA,QAAA,GAAA,GACA,MAAA,GAAA,QAAA,MAAA,SAAA,QAAA,OAAA,OAAA,QAAA,MAAA,OAAA,QAAA,OAAA,SAEA,QAAA,GAAA,GACA,GAAA,GAAA,EAAA,OAAA,KAAA,GACA,EAAA,CAEA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,EAAA,MAAA,EAAA,IAAA,KAAA,KAAA,EAAA,IAGA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,EAAA,MAAA,KAAA,EAAA,KAAA,KAAA,IAAA,EAAA,EAAA,IAAA,IAGA,OADA,GAAA,EAAA,GACA,GAAA,QAAA,IAAA,EAAA,KAAA,MA7HA,GA6DA,GAAA,EA7DA,EAAA,QAAA,UAAA,EAAA,GACA,KACA,GACA,IAAA,WACA,GAAA,aACA,EAAA,EAAA,OAAA,cAAA,mBACA,GAAA,aACA,EAAA,EAAA,OAAA,cAAA,mBACA,GAAA,mBACA,EAAA,EAAA,OAAA,iBAAA,oBACA,GAAA,oBACA,EAAA,EAAA,OAAA,eAAA,iBACA,EAAA,QACA,KAAA,EAAA,iBAAA,IAAA,KAAA,KACA,IAAA,EAAA,iBAAA,SAAA,KAAA,KACA,GAAA,yBACA,EAAA,EAAA,OAAA,yBAAA,2BACA,KAAA,EAAA,iBAAA,MAAA,KAAA,KACA,IAAA,EAAA,iBAAA,WAAA,KAAA,KACA,GAAA,gBACA,EAAA,EAAA,OAAA,eAAA,iBACA,KAAA,gCACA,GAAA,WACA,EAAA,EAAA,OAAA,wBAAA,kBAEA,GACA,IAAA,EAAA,gBACA,GAAA,EAAA,WACA,EAAA,EAAA,WACA,GAAA,EAAA,WACA,EAAA,EAAA,WACA,GAAA,EAAA,SACA,EAAA,EAAA,SACA,GAAA,EAAA,SACA,EAAA,EAAA,SACA,KAAA,EACA,IAAA,EACA,GAAA,EAAA,QACA,EAAA,EAAA,QACA,EAAA,SAAA,GACA,GAAA,GAAA,KAAA,UACA,OAAA,MAAA,SAAA,EAAA,MAAA,OAAA,EAAA,GAAA,IAEA,KAAA,SAAA,GACA,MAAA,MAAA,SAAA,EAAA,iBAAA,MAAA,QAAA,KAEA,IAAA,SAAA,GACA,MAAA,MAAA,SAAA,EAAA,iBAAA,WAAA,QAAA,KAEA,GAAA,SAAA,GACA,MAAA,MAAA,SAAA,EAAA,EAAA,IAEA,EAAA,SAAA,GACA,MAAA,MAAA,SAAA,EAAA,EAAA,IAEA,KAAA,EAAA,YACA,GAAA,SAAA,GACA,MAAA,MAAA,YAAA,IAAA,EAAA,IAEA,EAAA,EAAA,YCtFA,ODyFA,GAAA,KAAA,WACA,EAAA,QAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,OACA,EAAA,EAAA,EAAA,SACA,EAAA,EAAA,EAAA,UAEA,EAAA,QAAA,SAAA,GACA,MAAA,SAAA,OAAA,IACA,MAAA,EAAA,WACA,EAAA,KAAA,IAEA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,QAAA,OAAA,KACA,EAAA,EAAA,EAAA,GAAA,EAAA,SACA,IAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,KAAA,EACA,KAAA,EACA,OAAA,CAEA,KAAA,GADA,GAAA,GAAA,GAAA,MAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IACA,EAAA,IAAA,EAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,IChHA,EAAA,OACA,EAEA,OAAA,QAOA,QAAA,OAAA,sCAAA,SAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,CACA,OAAA,YACA,EAAA,KACA,EAAA,UACA,EAAA,GAAA,KACA,IAAA,GAAA,WACA,GAAA,GAAA,GAAA,MAAA,CACA,GAAA,EACA,EAAA,WAAA,EAAA,EAAA,IAEA,EAAA,KACA,IACA,EAAA,EAAA,MAAA,EAAA,MAGA,EAAA,IAAA,CAMA,OALA,KACA,EAAA,WAAA,EAAA,IAEA,IACA,EAAA,EAAA,MAAA,EAAA,IACA,KAEA,SAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EACA,EAAA,KACA,EAAA,CACA,KAAA,KACA,IAAA,GAAA,WACA,EAAA,EAAA,WAAA,EAAA,EAAA,GAAA,MACA,EAAA,KACA,EAAA,EAAA,MAAA,EAAA,GAEA,OAAA,YACA,GAAA,GAAA,GAAA,KACA,IAAA,EAAA,WAAA,IACA,EAAA,EACA,IAAA,GAAA,GAAA,EAAA,EC3CA,OD4CA,GAAA,KACA,EAAA,UACA,GAAA,GACA,aAAA,GACA,EAAA,KCrDA,EAAA,EACA,EAAA,EAAA,MAAA,EAAA,IACA,GAAA,EAAA,YAAA,IACA,EAAA,WAAA,EAAA,IAEA,KAKA,QAAA,OAAA,wCAAA,QAAA,cACA,YACA,UACA,WACA,GACA,IADA,QAAA,YAOA,EAAA,EAAA,SAAA,SAAA,EAAA,GACA,MAAA,GAAA,UAAA,EAAA,SAAA,gBAAA,EAAA,cAQA,GAAA,IAAA,SAAA,EAAA,EAAA,GACA,GAAA,EASA,OANA,GAFA,EAAA,aAEA,EAAA,aAAA,GACA,EAAA,iBACA,EAAA,iBAAA,GAAA,GAEA,EAAA,MAAA,GAEA,KAAA,EAAA,WAAA,IAAA,EAAA,GAQA,EAAA,OAAA,SAAA,GACA,GAAA,GAAA,EAAA,wBACA,EAAA,EAAA,aACA,QACA,MAAA,EAAA,OAAA,EAAA,YACA,OAAA,EAAA,QAAA,EAAA,aACA,IAAA,EAAA,KAAA,EAAA,aAAA,EAAA,gBAAA,YAAA,EAAA,gBAAA,WAAA,GACA,KAAA,EAAA,MAAA,EAAA,aAAA,EAAA,gBAAA,aAAA,EAAA,gBAAA,YAAA,KASA,EAAA,SAAA,SAAA,GACA,GAGA,GAAA,EAHA,GACA,IAAA,EACA,KAAA,EAoBA,OAjBA,UAAA,EAAA,IAAA,EAAA,YAEA,EAAA,EAAA,yBAGA,EAAA,EAAA,GACA,EAAA,EAAA,OAAA,GAEA,EAAA,EAAA,OAAA,GACA,EAAA,EAAA,UACA,EAAA,EAAA,OAAA,IAGA,EAAA,KAAA,EAAA,IAAA,EAAA,kBAAA,GACA,EAAA,MAAA,EAAA,IAAA,EAAA,mBAAA,KAIA,MAAA,EAAA,YACA,OAAA,EAAA,aACA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,aAAA,GACA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,cAAA,IAQA,IAAA,GAAA,SAAA,GACA,GAAA,GAAA,EAAA,cACA,EAAA,EAAA,cAAA,CACA,IAAA,EAAA,EAAA,aACA,MAAA,GAAA,eACA,MAAA,IAAA,EAAA,EAAA,SAAA,WAAA,EAAA,IAAA,EAAA,aACA,EAAA,EAAA,YAEA,OAAA,IAAA,EAAA,gBCtGA,OD+GA,GAAA,OAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,YAMA,OALA,GACA,GAAA,EAAA,IAAA,EAAA,aAAA,GAAA,EAAA,IAAA,EAAA,gBAAA,GAEA,GAAA,EAAA,IAAA,EAAA,cAAA,GAAA,EAAA,IAAA,EAAA,iBAAA,GAAA,EAAA,IAAA,EAAA,kBAAA,GAAA,EAAA,IAAA,EAAA,qBAAA,GAEA,GASA,EAAA,MAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,WClIA,ODmIA,GACA,GAAA,EAAA,IAAA,EAAA,cAAA,GAAA,EAAA,IAAA,EAAA,eAAA,GCtIA,GAAA,EAAA,IAAA,EAAA,eAAA,GAAA,EAAA,IAAA,EAAA,gBAAA,GAAA,EAAA,IAAA,EAAA,mBAAA,GAAA,EAAA,IAAA,EAAA,oBAAA,GAEA,GAEA,KAKA,QAAA,OAAA,0CAAA,SAAA,gBAAA,WACA,GAAA,GAAA,KAAA,UAAA,OAAA,+KACA,MAAA,MACA,SACA,KACA,SAAA,EAAA,GACA,QAAA,GAAA,EAAA,GAkBA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,IAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,IAIA,OAHA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,IAAA,GAEA,MAAA,EACA,MAAA,KAzBA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,EACA,GAAA,UAEA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CCpBA,ODqBA,GAAA,KAAA,WACA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QACA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAEA,EAAA,SAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,EAAA,IAAA,KAAA,SAAA,GAEA,MADA,GAAA,QAAA,EAAA,EAAA,EAAA,MACA,EAAA,WC7BA,EAAA,OACA,EAEA,MAAA,OAMA,QAAA,QAAA,MAAA,GAAA,QAAA,QAAA,IAAA,IAAA,QAAA,OAAA,MAAA,QAAA,SACA,UACA,WACA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,uBAAA,EAAA,6BAAA,EAAA,yBACA,EAAA,EAAA,sBAAA,EAAA,4BAAA,EAAA,yBAAA,EAAA,kCACA,IAAA,EACA,EAAA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,EACA,OAAA,YACA,EAAA,KAEA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,OAAA,EAEA,OAAA,YACA,EAAA,OAAA,IAIA,OADA,GAAA,UAAA,EACA,KCpBA,QAAA,OAAA,wBAAA,sCAAA,SAAA,SAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,kBAAA,UACA,YAAA,QACA,YAAA,QACA,UAAA,MACA,SAAA,uBACA,iBAAA,EACA,WAAA,EACA,QAAA,KACA,UAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EAEA,MAAA,MACA,UACA,aACA,WACA,KACA,iBACA,QACA,WACA,WACA,OACA,aACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAMA,QAAA,GAAA,GAsKA,QAAA,GAAA,GACA,EAAA,SAAA,EAAA,gBAEA,WAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAxKA,GAAA,MAEA,EAAA,EAAA,SAAA,QAAA,UAAA,EAAA,EACA,GAAA,SAAA,EAAA,EAAA,SACA,IAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,QAAA,EAAA,MACA,GAAA,SAAA,EAAA,YACA,EAAA,UAAA,QAGA,GACA,QACA,WACA,SAAA,GACA,EAAA,KACA,EAAA,GAAA,EAAA,YAAA,EAAA,OAGA,EAAA,MAAA,WACA,EAAA,aAAA,WACA,EAAA,UAGA,EAAA,MAAA,WACA,EAAA,aAAA,WACA,EAAA,UAGA,EAAA,QAAA,WACA,EAAA,aAAA,WACA,EAAA,YAIA,EAAA,kBACA,EAAA,SAAA,EAAA,SAAA,KAAA,SAAA,GACA,GAAA,GAAA,QAAA,QAAA,EACA,OAAA,GAAA,EAAA,iBAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,sBAAA,EAAA,IAAA,WAAA,WAAA,KAAA,EAIA,OAFA,GAAA,UACA,EAAA,OAAA,SACA,EAAA,GAAA,cAKA,IAAA,GAAA,EACA,EAAA,QAAA,QAAA,eAAA,EAAA,YAAA,eA2HA,OA1HA,GAAA,SAAA,KAAA,SAAA,GACA,QAAA,SAAA,KACA,EAAA,EAAA,MACA,EAAA,OACA,EAAA,EAAA,QAAA,EAAA,mBACA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,GACA,EAAA,SAEA,EAAA,KAAA,WAEA,EAAA,MACA,EAAA,aAAA,WACA,EAAA,UAIA,EAAA,QAAA,WAEA,IACA,EAAA,SACA,EAAA,MAEA,IACA,EAAA,SACA,EAAA,MAGA,EAAA,YAEA,EAAA,KAAA,WACA,EAAA,MAAA,EAAA,YAAA,eAAA,EACA,IAAA,EAEA,GADA,QAAA,UAAA,EAAA,WACA,EAAA,UAEA,EAAA,UAAA,EAAA,EAAA,WAAA,IAEA,IAAA,GAAA,EAAA,UAAA,KAAA,EAAA,OAEA,GAAA,EAAA,SAAA,EAAA,EAAA,cAGA,EAAA,KAAA,QAAA,UAAA,SAAA,EAAA,WAEA,EAAA,YACA,EAAA,UACA,EAAA,SAAA,EAAA,mBAEA,EAAA,SAAA,EAAA,YAEA,EAAA,UACA,EAAA,MAAA,EAAA,EAAA,KAAA,cAGA,EAAA,MAAA,EAAA,EAAA,EAAA,WACA,EAAA,MAAA,EAAA,YAAA,QAAA,KAEA,EAAA,UAAA,EACA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,SAAA,EAAA,SAGA,IAAA,GAAA,EAAA,EACA,GAAA,WACA,EAAA,UAEA,EAAA,SAAA,EAAA,YAAA,SACA,EAAA,WACA,EAAA,SAAA,EAAA,YAAA,SAAA,EAAA,WAGA,EAAA,WACA,EAAA,GAAA,QAAA,GACA,EAAA,GAAA,QAAA,IAEA,EAAA,UACA,EAAA,GAAA,QAAA,EAAA,WAGA,EAAA,KAAA,WACA,EAAA,MAAA,EAAA,YAAA,eAAA,GACA,EAAA,MAAA,EAAA,WACA,EAAA,MAAA,EAAA,YAAA,QAAA,GACA,EAAA,YAAA,EAAA,YAAA,SACA,EAAA,WACA,EAAA,YAAA,EAAA,YAAA,SAAA,EAAA,aAGA,EAAA,UACA,EAAA,MAAA,EAAA,cAGA,EAAA,UAAA,EACA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,SAAA,EAAA,UAEA,EAAA,WACA,EAAA,IAAA,QAAA,GACA,EAAA,IAAA,QAAA,IAEA,EAAA,UACA,EAAA,IAAA,QAAA,EAAA,WAGA,EAAA,OAAA,WACA,EAAA,SAAA,EAAA,OAAA,EAAA,QAEA,EAAA,MAAA,WACA,EAAA,GAAA,SAGA,EAAA,SAAA,SAAA,GACA,KAAA,EAAA,OAAA,EAAA,WACA,EAAA,OACA,EAAA,oBASA,EAGA,QAAA,GAAA,EAAA,GACA,MAAA,SAAA,SAAA,GAAA,GAAA,iBAAA,IAEA,QAAA,GAAA,GACA,MAAA,GAAA,KAAA,EAAA,IAAA,IAAA,EAAA,IAAA,IAAA,KAAA,SAAA,GACA,MAAA,SAAA,SAAA,IACA,EAAA,IAAA,EAAA,EAAA,MACA,EAAA,MAEA,IA5LA,GAAA,GAAA,QAAA,QACA,EAAA,OAAA,UAAA,KACA,EAAA,EAAA,uBAAA,EAAA,WACA,EAAA,QAAA,QAAA,EAAA,SAAA,MACA,EAAA,aA2LA,OAAA,OAGA,UAAA,WACA,UACA,OACA,SACA,SAAA,EAAA,EAAA,GACA,OACA,SAAA,MACA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,IACA,MAAA,EACA,QAAA,EACA,MAAA,EAEA,SAAA,SACA,WACA,kBACA,YACA,WACA,WACA,OACA,YACA,aACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,QAAA,SACA,QACA,WACA,SAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,SAAA,GACA,EAAA,GAAA,EAAA,YAAA,OAIA,EAAA,SAAA,EAAA,OAAA,EAAA,QAAA,SAAA,GACA,QAAA,SAAA,GACA,QAAA,OAAA,EAAA,GAEA,EAAA,QAAA,IAEA,EAEA,IAAA,GAAA,EAAA,EAEA,GAAA,GAAA,EAAA,SAAA,QAAA,EAAA,QAEA,EAAA,IAAA,WAAA,WACA,GC3RA,EAAA,UACA,EAAA,KACA,EAAA;QAQA,QAAA,OAAA,4BAAA,SAAA,UAAA,WACA,GAAA,GAAA,KAAA,UACA,YAAA,SACA,UAAA,mBACA,QAAA,EAEA,MAAA,KAAA,WACA,OAAA,SAAA,MAEA,UAAA,YACA,UACA,YACA,UACA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,QACA,QACA,SAAA,IACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,GAAA,QAAA,KAAA,EACA,SAAA,QAAA,OAAA,KAAA,GAAA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,EAAA,OAAA,WACA,MAAA,GAAA,QACA,SAAA,GACA,GAAA,GAAA,EAAA,GAAA,iBAAA,MAAA,EAAA,UAAA,IACA,SAAA,QAAA,EAAA,SAAA,GACA,GAAA,GAAA,QAAA,QAAA,GACA,EAAA,EAAA,KAAA,EAAA,WAAA,QAAA,IAAA,MACA,GAAA,SACA,EAAA,IAAA,EAAA,IAEA,IAAA,GAAA,GAAA,QAAA,GAAA,KACA,GAAA,KAAA,GACA,EAAA,SAAA,EAAA,aC/CA,EAAA,YAAA,EAAA,sBAUA,QAAA,OAAA,0BAAA,2BAAA,SAAA,WAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,GACA,WAAA,EACA,QAAA,EACA,UAAA,QACA,SAAA,2BACA,iBAAA,EACA,QAAA,QACA,UAAA,EACA,MAAA,EACA,MAAA,GACA,QAAA,GACA,MAAA,EAEA,MAAA,MACA,WACA,SAAA,GACA,QAAA,GAAA,EAAA,GAEA,GAAA,GAAA,QAAA,UAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAKA,OAHA,GAAA,UACA,EAAA,OAAA,QAAA,EAAA,SAEA,EAEA,MAAA,OAGA,UAAA,aACA,UACA,OACA,WACA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,uBAAA,EAAA,UACA,QACA,SAAA,MACA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,IAAA,MAAA,EACA,SAAA,SACA,WACA,kBACA,YACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,eACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,QAAA,SACA,QACA,WACA,SAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,EAAA,YAAA,GACA,QAAA,UAAA,IAAA,EAAA,WACA,GAAA,EAAA,wBAKA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,SAAA,EAAA,GACA,QAAA,SAAA,GACA,QAAA,OAAA,EAAA,GAEA,EAAA,QAAA,EAEA,QAAA,UAAA,IAAA,EAAA,WACA,GAAA,EAAA,sBAEA,GAEA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,SAAA,GACA,GAAA,QAAA,UAAA,KAEA,QAAA,SAAA,KACA,IAAA,EAAA,MAAA,kBACA,KAAA,EAAA,EAAA,OAAA,EAAA,SAGA,IAAA,GAAA,EAAA,EAAA,EAEA,GAAA,IAAA,WAAA,WACA,GCzGA,EAAA,UACA,EAAA,KACA,EAAA,YAQA,QAAA,OAAA,4BACA,kCACA,sCACA,SAAA,aAAA,WAEA,GAAA,GAAA,KAAA,WACA,EAAA,KAAA,UACA,SAAA,IACA,SAAA,IACA,OAAA,IAEA,MAAA,MACA,UACA,YACA,aACA,aACA,WACA,WACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,GAAA,UAAA,EAAA,GAAA,SAAA,gBAAA,EAAA,cAEA,QAAA,GAAA,GAEA,GAAA,GAAA,QAAA,UAAA,EAAA,EACA,GAAA,UACA,EAAA,QAAA,EACA,IAAA,GAAA,EAAA,EAAA,QAAA,QACA,EAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,SAAA,EAAA,EAEA,IAAA,EAAA,GAEA,MADA,GAAA,GAAA,UACA,EAAA,EAEA,IAEA,GAAA,EAGA,EACA,EACA,EACA,EACA,EACA,EAVA,KAGA,EAAA,EAAA,oBACA,IA+HA,OAxHA,GAAA,KAAA,WAEA,KAAA,QAAA,EAEA,EAAA,EAAA,KAAA,cAAA,EAAA,UACA,EAAA,EAAA,KAAA,cAAA,EAAA,UACA,EAAA,GAAA,QAAA,KAAA,4BACA,EAAA,GAAA,SAAA,GACA,EAAA,GAAA,SAAA,GACA,EAAA,EAAA,KAAA,aAAA,EAAA,UACA,EAAA,EAAA,IAAA,qBAAA,GACA,EAAA,EAAA,IAAA,wBAAA,GACA,IAEA,IACA,EAAA,GAAA,IAGA,EAAA,QAAA,WAEA,KAAA,UACA,KAAA,QAAA,IAIA,EAAA,IAAA,QAAA,KAAA,4BACA,EAAA,IAAA,SAAA,GACA,EAAA,IAAA,SAAA,GACA,IACA,IACA,SACA,GAAA,KAGA,EAAA,cAAA,WAEA,GAAA,EAAA,OAAA,CAOA,GAJA,GAAA,EAAA,EAAA,YAAA,EAAA,KAAA,eAAA,EAEA,EAAA,KAAA,IAAA,EAAA,YAAA,EAAA,KAAA,iBAEA,EAAA,EAAA,GAAA,WAAA,IAAA,EAAA,GAAA,OACA,MAAA,GAAA,iBAAA,EAAA,GAGA,KAAA,GAAA,GAAA,EAAA,OAAA,KACA,IAAA,QAAA,YAAA,EAAA,GAAA,YAAA,OAAA,EAAA,GAAA,WAEA,IAAA,EAAA,GAAA,UAEA,EAAA,EAAA,GAAA,WAEA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,WAEA,MAAA,GAAA,iBAAA,EAAA,MAGA,EAAA,2BAAA,WACA,WAAA,KAAA,cAAA,IAGA,EAAA,iBAAA,SAAA,GACA,GAAA,EAAA,CACA,GAAA,GAAA,EAAA,mBAAA,EACA,KACA,EAAA,OAAA,YAAA,UACA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,OAAA,SAAA,SAAA,OACA,EAAA,OAAA,SAAA,SAAA,YAAA,WAIA,EAAA,EAAA,OACA,EAAA,OAAA,SAAA,UACA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,OAAA,SAAA,SAAA,OACA,EAAA,OAAA,SAAA,SAAA,SAAA,WAGA,EAAA,mBAAA,SAAA,GACA,MAAA,GAAA,OAAA,SAAA,GACA,MAAA,GAAA,SAAA,IACA,IAGA,EAAA,aAAA,WACA,QAAA,QAAA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,cAAA,EAAA,OACA,GAAA,UAAA,EAAA,EAAA,OAAA,GAAA,IAAA,KACA,EAAA,QAAA,OAAA,EAAA,YACA,EAAA,WAAA,EAAA,EAAA,UAEA,EAAA,EAAA,OAAA,SAAA,GACA,MAAA,QAAA,EAAA,YACA,KAAA,SAAA,EAAA,GACA,MAAA,GAAA,UAAA,EAAA,YAEA,KAEA,EAAA,aAAA,SAAA,EAAA,GACA,EAAA,MACA,OAAA,EACA,OAAA,KAGA,EAAA,eAAA,SAAA,EAAA,GAEA,IAAA,GADA,GACA,EAAA,EAAA,OAAA,KACA,GAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,SAAA,EAAA,CACA,EAAA,CACA,OAGA,EAAA,EAAA,OAAA,EAAA,IAEA,EAAA,SAAA,SAAA,GACA,EAAA,GAAA,SAAA,WAGA,EAAA,OACA,EAvJA,GAAA,GAAA,QAAA,QAAA,GACA,EAAA,QAAA,QAAA,EAAA,KAAA,oBACA,EAAA,QAAA,QAAA,EAAA,SAAA,KAuJA,OAAA,OAGA,UAAA,eACA,aACA,WACA,aACA,aACA,SAAA,EAAA,EAAA,EAAA,GACA,OACA,SAAA,MACA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,IAAA,MAAA,EACA,SAAA,SACA,SACA,UACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,KAEA,IAAA,GAAA,EAAA,EACA,GAAA,aAAA,EAAA,OAAA,GACA,EAAA,IAAA,WAAA,WACA,IACA,EAAA,eAAA,EAAA,OAAA,GACA,EAAA,WAEA,EAAA,KACA,EAAA,YAKA,UAAA,mBACA,aACA,WACA,aACA,aACA,WACA,OACA,SAAA,IACA,QAAA,SAAA,GACA,GAAA,GAAA,EAAA,GAAA,iBAAA,eChOA,SAAA,QAAA,EAAA,SAAA,GACA,GAAA,GAAA,QAAA,QAAA,EACA,GAAA,SAAA,KAAA,eAAA,IAAA,KAAA,cAAA,EAAA,KAAA,gBAQA,QAAA,OAAA,yBACA,yBACA,wCACA,SAAA,UAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,SACA,YAAA,UACA,UAAA,cACA,SAAA,yBACA,QAAA,QACA,WAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EACA,UAAA,EACA,gBAAA,EACA,MAAA,EACA,UAAA,oCACA,YAAA,gCACA,UAAA,EACA,cAAA,WACA,cAAA,yBAEA,MAAA,MACA,UACA,YACA,aACA,WACA,SAAA,EAAA,EAAA,EAAA,GAIA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,EACA,GAAA,EAAA,EAAA,EACA,IAAA,GAAA,EAAA,MACA,GAAA,YACA,EAAA,aAAA,EACA,EAAA,YAAA,EAAA,SACA,EAAA,oBAAA,EAAA,gBAAA,EAAA,SACA,EAAA,eAAA,EAAA,cACA,EAAA,UAAA,SAAA,GACA,EAAA,aAAA,WACA,EAAA,SAAA,MAGA,EAAA,QAAA,SAAA,GACA,EAAA,aAAA,WACA,EAAA,OAAA,MAGA,EAAA,WAAA,WACA,MAAA,GAAA,cAEA,EAAA,UAAA,SAAA,GACA,MAAA,GAAA,UAAA,IAEA,EAAA,WAAA,WACA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IACA,EAAA,UAAA,IACA,EAAA,QAAA,IAIA,EAAA,YAAA,WACA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IACA,EAAA,UAAA,IACA,EAAA,QAAA,IAKA,EAAA,OAAA,SAAA,GACA,EAAA,SAAA,EACA,EAAA,sBAEA,EAAA,SAAA,SAAA,GASA,MARA,GAAA,UACA,EAAA,aAAA,OACA,EAAA,UAAA,GAAA,EAAA,aAAA,OAAA,EAAA,aAAA,QAAA,GAAA,GAAA,EAAA,aAAA,KAAA,GACA,EAAA,MACA,EAAA,aAAA,QAEA,EAAA,aAAA,EAEA,EAAA,cAEA,EAAA,OAAA,SAAA,GACA,GAAA,GAAA,EAAA,SAAA,GAAA,KACA,GAAA,OAAA,WACA,EAAA,SAAA,GACA,EAAA,SACA,EAAA,cAAA,EAAA,aAAA,IAAA,SAAA,GACA,MAAA,GAAA,SAAA,GAAA,UAGA,EAAA,cAAA,GAEA,EAAA,UAIA,EAAA,MAAA,EAAA,YAAA,UAAA,EAAA,IAGA,EAAA,mBAAA,WACA,EAAA,aAAA,EAAA,SAAA,OAEA,EAAA,aADA,EAAA,UAAA,QAAA,QAAA,EAAA,aACA,EAAA,YAAA,IAAA,SAAA,GACA,MAAA,GAAA,UAAA,KAGA,EAAA,UAAA,EAAA,aAEA,EAAA,cAAA,EAAA,SAAA,SACA,EAAA,aAAA,EAAA,YAAA,IAGA,EAAA,WAAA,WACA,MAAA,GAAA,WAAA,EAIA,EAAA,SAAA,QAAA,EAAA,WAAA,QAAA,EAAA,UAHA,EAAA,SAAA,QAKA,EAAA,UAAA,SAAA,GACA,MAAA,GAAA,SACA,KAAA,EAAA,aAAA,QAAA,GAEA,EAAA,eAAA,GAGA,EAAA,UAAA,SAAA,GACA,GAAA,GAAA,EAAA,SAAA,OAAA,EAAA,CACA,IAAA,EAAA,CAEA,IAAA,EAAA,EAAA,KACA,EAAA,SAAA,GAAA,QAAA,IAGA,KAAA,EAAA,GAEA,MAAA,KAEA,EAAA,aAAA,SAAA,GAKA,GAHA,EAAA,iBACA,EAAA,kBAEA,EAAA,CACA,GAAA,GAAA,QAAA,QAAA,EAAA,OACA,GAAA,eAAA,WAGA,EAAA,WAAA,SAAA,GACA,GAAA,eAAA,KAAA,EAAA,SAAA,CAKA,GAHA,EAAA,iBACA,EAAA,mBAEA,EAAA,WAAA,KAAA,EAAA,SAAA,IAAA,EAAA,SACA,MAAA,GAAA,OAAA,EAAA,aAGA,MAAA,EAAA,SAAA,EAAA,aAAA,EACA,EAAA,eACA,KAAA,EAAA,SAAA,EAAA,aAAA,EAAA,SAAA,OAAA,EACA,EAAA,eACA,QAAA,YAAA,EAAA,gBACA,EAAA,aAAA,GACA,EAAA,WAGA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,IACA,EAAA,UACA,EAAA,SAAA,SAAA,mBAEA,WAAA,WACA,EAAA,SAAA,GAAA,EAAA,aAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,GAAA,UAAA,EAAA,cAIA,IAAA,GAAA,EAAA,IAQA,OAPA,GAAA,KAAA,WACA,EAAA,SAAA,IAAA,EAAA,aAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,IAAA,UAAA,EAAA,YAEA,GAAA,IAEA,EAvKA,GACA,IADA,QAAA,QAAA,EAAA,SAAA,MACA,8BAAA,KAAA,EAAA,UAAA,YACA,EAAA,eAAA,GAAA,UAAA,CAwKA,OADA,GAAA,SAAA,EACA,MAGA,UAAA,YACA,UACA,SACA,KACA,UACA,gBACA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,QACA,QACA,SAAA,MACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IAAA,MAAA,EAoBA,IAnBA,QAAA,SACA,YACA,YACA,QACA,UACA,WACA,OACA,YACA,WACA,cACA,WACA,iBACA,YACA,iBACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,WAAA,EAAA,GAAA,SAAA,cAAA,CACA,GAAA,GAAA,CACA,GAAA,IAAA,UAAA,QACA,EAAA,QAAA,QAAA,2DACA,EAAA,MAAA,GAGA,GAAA,GAAA,EAAA,EAAA,WAEA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,OAAA,GAAA,QAAA,OAAA,IAAA,MACA,GAAA,OAAA,EAAA,WAEA,EAAA,SAAA,EAAA,GAAA,KAAA,SAAA,GACA,EAAA,OAAA,GACA,EAAA,cAEA,GAEA,EAAA,OAAA,EAAA,QAAA,WAEA,EAAA,qBACA,EAAA,YACA,GAEA,EAAA,QAAA,WAEA,GAAA,GAAA,CACA,GAAA,UAAA,QAAA,QAAA,EAAA,cACA,EAAA,EAAA,YAAA,IAAA,SAAA,GAEA,MADA,GAAA,EAAA,UAAA,GACA,QAAA,UAAA,GAAA,EAAA,OAAA,SAAA,GAAA,OAAA,IACA,OAAA,QAAA,WAEA,EADA,EAAA,QAAA,EAAA,WAAA,EAAA,WACA,EAAA,OAAA,KAAA,EAAA,eAAA,EAAA,eAEA,EAAA,KAAA,QAGA,EAAA,EAAA,UAAA,EAAA,aACA,EAAA,QAAA,UAAA,GAAA,EAAA,OAAA,SAAA,GAAA,OAAA,GAEA,EAAA,MAAA,EAAA,EAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAGA,EAAA,IAAA,WAAA,WACA,GCrSA,EAAA,UACA,EAAA,KACA,EAAA,YAQA,QAAA,OAAA,6BACA,oCACA,2BACA,SAAA,cAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,aACA,UAAA,cACA,SAAA,iCACA,QAAA,QACA,WAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EACA,WAAA,EACA,SAAA,OACA,WAAA,YACA,gBAAA,KACA,WAAA,EACA,SAAA,IACA,SAAA,IACA,OAAA,EACA,SAAA,EACA,WAAA,EACA,OAAA,iCACA,SAAA,mCACA,cAAA,QAEA,MAAA,MACA,UACA,YACA,aACA,OACA,UACA,aACA,WACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAMA,QAAA,GAAA,EAAA,EAAA,GA+NA,QAAA,GAAA,EAAA,GACA,GAAA,EAAA,GAAA,gBAAA,CACA,GAAA,GAAA,EAAA,GAAA,iBACA,GAAA,UAAA,GACA,EAAA,UAAA,YAAA,GACA,EAAA,QAAA,YAAA,GACA,EAAA,aACA,GAAA,GAAA,kBACA,EAAA,GAAA,kBAAA,EAAA,GACA,QAAA,YAAA,EAAA,GAAA,kBACA,EAAA,GAAA,eAAA,EACA,EAAA,GAAA,aAAA,GAGA,QAAA,KACA,EAAA,GAAA,QA7OA,GAAA,GAAA,EAAA,EAAA,QAAA,UAAA,EAAA,IACA,EAAA,EAAA,MACA,EAAA,EAAA,SACA,EAAA,EAAA,OAEA,EAAA,EACA,EAAA,EAAA,YAAA,GAAA,MACA,GACA,KAAA,EAAA,WACA,SAAA,EAAA,WAAA,GACA,OAAA,EAAA,aACA,OAAA,EAAA,aACA,YAAA,EAAA,mBAEA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,WACA,EAAA,4BAAA,KAAA,GAAA,MAAA,EACA,GAAA,QAAA,EAAA,OACA,EAAA,UAAA,EAAA,SAEA,EAAA,QAAA,SAAA,EAAA,GACA,EAAA,OAAA,EAAA,IAEA,EAAA,WAAA,SAAA,EAAA,GACA,EAAA,WAAA,EAAA,IAEA,EAAA,gBAAA,SAAA,GACA,EAAA,eAAA,IAGA,EAAA,OAAA,SAAA,GAEA,QAAA,OAAA,KAAA,MAAA,EAAA,YACA,EAAA,MAAA,EACA,QAAA,OAAA,GACA,KAAA,EAAA,WACA,OAAA,EAAA,aACA,OAAA,EAAA,aACA,YAAA,EAAA,oBAEA,EAAA,UACA,EAAA,UACA,EAAA,UAGA,EAAA,OAAA,SAAA,EAAA,EAAA,KAEA,EAAA,YAAA,MAAA,EAAA,WAAA,cACA,EAAA,WAAA,GAAA,MAAA,KAAA,EAAA,IACA,QAAA,OAAA,KACA,EAAA,GAAA,MAAA,IACA,IAAA,EACA,EAAA,WAAA,SAAA,EAAA,YACA,IAAA,GACA,EAAA,WAAA,WAAA,EAAA,cACA,EAAA,cAAA,EAAA,YACA,EAAA,UACA,EAAA,YAAA,GACA,EAAA,MAAA,IAGA,EAAA,eAAA,SAAA,GACA,GAAA,IAAA,GAAA,EAAA,YAAA,UACA,GAAA,WAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,cAAA,EAAA,YACA,EAAA,WAGA,EAAA,OAAA,WAEA,GAAA,GACA,EADA,EAAA,EAAA,SAAA,SAAA,EAAA,OAAA,EAAA,IACA,IACA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,UACA,EAAA,MACA,KAAA,EACA,MAAA,EAAA,EAAA,EAAA,IACA,SAAA,EAAA,OAAA,EAAA,YAAA,EAAA,GACA,SAAA,EAAA,YAAA,EAAA,IAGA,IAAA,GAAA,IACA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,YACA,EAAA,MACA,KAAA,EACA,MAAA,EAAA,EAAA,EAAA,IACA,SAAA,EAAA,OAAA,EAAA,YAAA,EAAA,GACA,SAAA,EAAA,YAAA,EAAA,IAGA,IAAA,KACA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,MACA,EAAA,GACA,EAAA,IAGA,GAAA,KAAA,EACA,EAAA,SAAA,EAAA,GACA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,MAAA,WAAA,GACA,EAAA,cAAA,EAAA,GACA,EAAA,UAAA,GAEA,EAAA,YAAA,SAAA,EAAA,GACA,MAAA,GAAA,MAEA,IAAA,EACA,EAAA,aAAA,EAAA,MAAA,WACA,IAAA,EACA,EAAA,eAAA,EAAA,MAAA,aADA,QAHA,GAOA,EAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAMA,OALA,KAAA,EACA,EAAA,EAAA,UAAA,IAAA,EAAA,OACA,IAAA,IACA,EAAA,EAAA,UAAA,KAAA,EAAA,MAEA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,SAEA,EAAA,aAAA,SAAA,EAAA,GACA,WAAA,EAAA,cACA,EAAA,eAAA,EAAA,GAEA,EAAA,WAAA,EAAA,IAGA,EAAA,eAAA,SAAA,EAAA,GACA,CAAA,GAAA,GAAA,GAAA,MAAA,EAAA,OACA,EAAA,EAAA,WACA,GADA,EAAA,EAAA,KAAA,OACA,EAAA,aAAA,GAAA,EAAA,MAAA,OACA,IAAA,EACA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,IAAA,GAEA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,IAAA,GAEA,EAAA,OAAA,EAAA,GAAA,GACA,EAAA,WAEA,EAAA,WAAA,SAAA,EAAA,GACA,GAAA,EACA,KAAA,GACA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,QACA,QAAA,OAAA,GAAA,KAAA,EAAA,cACA,IAAA,IACA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,YACA,QAAA,OAAA,GAAA,OAAA,EAAA,gBAEA,EAAA,UAEA,EAAA,aAAA,SAAA,GAMA,GAJA,UAAA,EAAA,OAAA,SAAA,eACA,EAAA,iBACA,EAAA,kBAEA,EAAA,CACA,GAAA,GAAA,QAAA,QAAA,EAAA,OACA,YAAA,EAAA,GAAA,SAAA,gBACA,EAAA,EAAA,UAEA,EAAA,eAAA,WAGA,EAAA,WAAA,SAAA,GACA,GAAA,mBAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,OAAA,CAKA,GAHA,EAAA,iBACA,EAAA,kBAEA,KAAA,EAAA,QACA,MAAA,GAAA,MAAA,EAEA,IAAA,GAAA,GAAA,MAAA,EAAA,OACA,EAAA,EAAA,WAAA,EAAA,EAAA,EAAA,KAAA,OACA,EAAA,EAAA,aAAA,EAAA,EAAA,EAAA,MAAA,OACA,EAAA,UAAA,KAAA,EAAA,SACA,EAAA,EAAA,IAAA,EAAA,EAEA,KACA,KAAA,EAAA,QACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,KAAA,EAAA,UACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAGA,IAAA,IACA,EACA,EAEA,KAAA,GACA,KAAA,EAAA,QACA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,KACA,KAAA,EAAA,SACA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,KACA,GACA,EACA,IAEA,IAAA,GACA,KAAA,EAAA,QACA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,KACA,KAAA,EAAA,SACA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,KACA,GACA,EAAA,EACA,EAAA,EAAA,IAEA,IAAA,IACA,GACA,EAAA,iBACA,GACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,IAGA,EAAA,OAAA,EAAA,GAAA,GACA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,WAqBA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,MAAA,IAAA,EAAA,WACA,EAAA,KAAA,OAAA,YACA,GAAA,IAAA,qBAAA,eAEA,IACA,EAAA,KAAA,OAAA,QACA,EAAA,KAAA,WAAA,QACA,EAAA,GAAA,QAAA,QAEA,MAEA,IAAA,GAAA,EAAA,OACA,GAAA,QAAA,WACA,GAAA,EAAA,WACA,EAAA,IAAA,QAAA,GAEA,IAEA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,IACA,WAAA,WACA,EAAA,SAAA,GAAA,EAAA,aAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,GAAA,UAAA,EAAA,cAIA,IAAA,GAAA,EAAA,IAQA,OAPA,GAAA,KAAA,SAAA,GACA,EAAA,SAAA,IAAA,EAAA,aAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,IAAA,UAAA,EAAA,YAEA,EAAA,IAEA,EA5RA,GACA,IADA,QAAA,QAAA,EAAA,SAAA,MACA,8BAAA,KAAA,EAAA,UAAA,YACA,EAAA,eAAA,GAAA,UAAA,CA6RA,OA5RA,GAAA,OACA,EAAA,KAAA,EAAA,IA0RA,EAAA,SAAA,EACA,MAGA,UAAA,gBACA,UACA,SACA,KACA,UACA,aACA,cACA,cACA,WACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,CAAA,GAAA,GAAA,EAAA,SACA,EAAA,8BAAA,KAAA,EAAA,UAAA,UACA,GAAA,uBAAA,EAAA,WACA,OACA,SAAA,MACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IACA,MAAA,EACA,WAAA,EAEA,SAAA,SACA,YACA,YACA,QACA,UACA,WACA,OACA,YACA,WACA,YACA,WACA,aACA,kBACA,YACA,WACA,aACA,SACA,iBACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,SAAA,GACA,GAAA,QAAA,UAAA,KAEA,QAAA,SAAA,KACA,IAAA,EAAA,MAAA,qBACA,KAAA,EAAA,EAAA,OAAA,EAAA,UAGA,IAAA,EAAA,WAAA,EAAA,aACA,EAAA,WAAA,QACA,IAAA,GAAA,EAAA,EAAA,EAAA,EACA,GAAA,EAAA,QAEA,IAAA,GAAA,GACA,OAAA,EAAA,WACA,KAAA,EAAA,MAGA,SAAA,SACA,UACA,WACA,SAAA,GAEA,QAAA,UAAA,EAAA,KAAA,EAAA,SAAA,EAAA,SAAA,GAEA,EAAA,SAAA,GADA,QAAA,GACA,GAAA,OAAA,YAAA,KAAA,EAAA,GACA,QAAA,SAAA,IAAA,EAAA,MAAA,WACA,GAAA,MAAA,EAAA,OAAA,EAAA,EAAA,OAAA,IAEA,EAAA,MAAA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,KAEA,MAAA,EAAA,SAAA,KAAA,EAAA,aAIA,EAAA,OAAA,EAAA,QAAA,WAEA,EAAA,OAAA,EAAA,cACA,GAEA,EAAA,SAAA,QAAA,SAAA,GAGA,IAAA,EAEA,WADA,GAAA,aAAA,QAAA,EAGA,IAAA,GAAA,QAAA,OAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,WACA,KAAA,GAAA,MAAA,EAAA,WACA,EAAA,aAAA,QAAA,OACA,CACA,GAAA,GAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OACA,GAAA,aAAA,OAAA,GAEA,IACA,EAAA,WAAA,GAEA,MAAA,WAAA,EAAA,SACA,EAAA,EAAA,EAAA,iBAAA,EAAA,YACA,WAAA,EAAA,SACA,EAAA,WAAA,UACA,QAAA,EAAA,SACA,EAAA,WAAA,cAEA,GAAA,MAAA,EAAA,cAIA,EAAA,YAAA,KAAA,SAAA,GAEA,GAAA,EAaA,OAXA,GADA,QAAA,YAAA,IAAA,OAAA,EACA,IACA,QAAA,OAAA,GACA,EACA,WAAA,EAAA,SACA,EAAA,MAAA,EAAA,KAAA,EAAA,iBAEA,GAAA,MAAA,GAIA,EAAA,WAAA,EACA,EAAA,aAGA,EAAA,QAAA,WAEA,EAAA,KAAA,EAAA,YAAA,MAAA,EAAA,WAAA,WAAA,GAAA,EAAA,EAAA,WAAA,EAAA,cAGA,EAAA,IAAA,WAAA,WACA,GC1dA,EAAA,UACA,EAAA,KACA,EAAA,YAQA,QAAA,OAAA,yBAAA,SAAA,OAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,SAAA,mBACA,SAAA,WACA,YAAA,UAEA,EAAA,KAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,IAEA,GAAA,SAAA,QAAA,KAAA,GACA,QAAA,SACA,YACA,WACA,eACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,SAAA,GAAA,EAAA,MAGA,EAAA,UAAA,EAAA,SAAA,SACA,EAAA,aAAA,EAAA,SAAA,YACA,EAAA,OAAA,EAAA,UACA,EAAA,wBACA,EAAA,MAAA,SAAA,GACA,EAAA,OAAA,KAAA,IAEA,EAAA,OAAA,QAAA,EACA,EAAA,WAAA,EAAA,WAAA,SAAA,GACA,EAAA,OAAA,QAAA,EACA,EAAA,qBAAA,QAAA,SAAA,GACA,OAIA,MAAA,KAAA,WACA,GAAA,KAGA,OAFA,GAAA,SAAA,EACA,EAAA,WAAA,EACA,KAEA,UAAA,UACA,UACA,WACA,OACA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,QACA,QACA,SACA,WACA,UAEA,YAAA,EACA,OAAA,EACA,WAAA,EAAA,WACA,YAAA,SAAA,EAAA,GACA,MAAA,GAAA,UAAA,EAAA,UAEA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,EACA,KAEA,EAAA,qBAAA,KAAA,WACA,EAAA,cAAA,EAAA,OAAA,WAGA,EAAA,YAAA,KAAA,SAAA,GAGA,MADA,GAAA,WAAA,EAAA,GACA,UAMA,UAAA,UACA,UACA,WACA,OACA,SAAA,EAAA,EAAA,GACA,OACA,SACA,YACA,WAEA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAeA,QAAA,KACA,GAAA,GAAA,EAAA,OAAA,QAAA,GACA,EAAA,EAAA,OAAA,OACA,GAAA,IAAA,EAAA,WAAA,eAAA,EAAA,EAAA,SAAA,aAjBA,GACA,IADA,EAAA,GACA,EAAA,GAEA,GAAA,SAAA,YAEA,EAAA,SAAA,QAAA,SAAA,GACA,EAAA,MAAA,EAAA,YAAA,KAGA,EAAA,SAAA,WACA,EAAA,SAAA,EAAA,SAAA,WAGA,EAAA,MAAA,GC/GA,EAAA,qBAAA,KAAA,WACA,MAEA,SAOA,QAAA,OAAA,0BAAA,sCAAA,SAAA,WAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,GACA,YAAA,UACA,YAAA,UACA,WAAA,EACA,QAAA,EACA,UAAA,MACA,SAAA,2BACA,iBAAA,EACA,QAAA,cACA,UAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,GACA,KAAA,GACA,MAAA,EAEA,MAAA,MACA,UACA,aACA,WACA,KACA,iBACA,QACA,WACA,aACA,QACA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAIA,QAAA,GAAA,EAAA,GA4PA,QAAA,KACA,MAAA,SAAA,EAAA,UACA,EAAA,OAAA,EAAA,OAAA,IAAA,EAAA,IAEA,EAAA,SAAA,EAAA,OAAA,IAAA,EAAA,IAGA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,GACA,EAAA,EAAA,MAAA,IACA,QAAA,EAAA,IACA,IAAA,QACA,GACA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EACA,KAAA,EAAA,KAAA,EAAA,MAEA,MACA,KAAA,SACA,GACA,IAAA,EAAA,IAAA,EAAA,OACA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,EAAA,EAEA,MACA,KAAA,OACA,GACA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EACA,KAAA,EAAA,KAAA,EAEA,MACA,SACA,GACA,IAAA,EAAA,IAAA,EACA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,EAAA,GAIA,IAAA,EAAA,GACA,MAAA,EAGA,IAAA,QAAA,EAAA,IAAA,WAAA,EAAA,GACA,OAAA,EAAA,IACA,IAAA,OACA,EAAA,KAAA,EAAA,IACA,MACA,KAAA,QACA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,MAEA,IAAA,SAAA,EAAA,IAAA,UAAA,EAAA,GACA,OAAA,EAAA,IACA,IAAA,MACA,EAAA,IAAA,EAAA,IAAA,CACA,MACA,KAAA,SACA,EAAA,IAAA,EAAA,IAAA,EAAA,OAGA,MAAA,GApTA,GAAA,MAEA,EAAA,EAAA,GAAA,SAAA,cACA,EAAA,EAAA,SAAA,QAAA,UAAA,EAAA,EACA,GAAA,SAAA,EAAA,EAAA,SACA,IAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,QAAA,EAAA,MACA,GAAA,OAAA,QAAA,SAAA,EAAA,SACA,EAAA,MAAA,WAAA,EAAA,QAGA,EAAA,QACA,EAAA,OAAA,MAAA,EAAA,OAGA,EAAA,MAAA,WACA,EAAA,aAAA,WACA,EAAA,UAGA,EAAA,MAAA,WACA,EAAA,aAAA,WACA,EAAA,UAGA,EAAA,QAAA,WACA,EAAA,aAAA,WACA,EAAA,YAGA,EAAA,SAAA,EAAA,UAAA,CAEA,IAAA,GAAA,CAEA,GAAA,kBACA,EAAA,SAAA,EAAA,SAAA,KAAA,SAAA,GACA,GAAA,GAAA,QAAA,QAAA,EACA,OAAA,GAAA,EAAA,iBAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,sBAAA,EAAA,GAIA,OAHA,GAAA,SACA,EAAA,EAAA,oBAAA,EAAA,KACA,EAAA,WAAA,WAAA,KAAA,GACA,EAAA,GAAA,cAKA,IAAA,GAAA,EAAA,EAAA,CAwQA,OAvQA,GAAA,SAAA,KAAA,SAAA,GACA,QAAA,SAAA,KACA,EAAA,EAAA,MACA,EAAA,OACA,EAAA,EAAA,QAAA,EAAA,mBACA,EAAA,EAAA,MAAA,GACA,EAAA,EACA,EAAA,EAAA,GACA,EAAA,SAEA,EAAA,KAAA,WAEA,EAAA,OAAA,QAAA,SAAA,EAAA,SACA,EAAA,OACA,KAAA,EAAA,MACA,KAAA,EAAA,QAQA,SAAA,EAAA,UACA,EAAA,EACA,QAAA,UAAA,EAAA,WACA,EAAA,EAAA,UACA,EAAA,YACA,EAAA,EAAA,EAAA,WAGA,IAAA,GAAA,EAAA,QAAA,MAAA,IACA,SAAA,QAAA,EAAA,SAAA,GACA,UAAA,EACA,EAAA,GAAA,QAAA,EAAA,QACA,WAAA,IACA,EAAA,GAAA,UAAA,EAAA,aAAA,QAAA,EAAA,OACA,EAAA,GAAA,UAAA,EAAA,aAAA,OAAA,EAAA,OACA,WAAA,GAAA,UAAA,GAAA,EAAA,GAAA,EAAA,aAAA,YAAA,EAAA,6BAIA,EAAA,SACA,EAAA,OAAA,QAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,EAAA,SAGA,EAAA,MACA,EAAA,aAAA,WACA,UAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,UAIA,EAAA,QAAA,WAGA,IAAA,GADA,GAAA,EAAA,QAAA,MAAA,KACA,EAAA,EAAA,OAAA,KAAA,CACA,GAAA,GAAA,EAAA,EACA,WAAA,EACA,EAAA,IAAA,QAAA,EAAA,QACA,WAAA,IACA,EAAA,IAAA,UAAA,EAAA,aAAA,QAAA,EAAA,OACA,EAAA,IAAA,UAAA,EAAA,aAAA,OAAA,EAAA,OACA,WAAA,GAAA,UAAA,GAAA,EAAA,IAAA,EAAA,aAAA,YAAA,EAAA,2BAIA,IACA,EAAA,SACA,EAAA,MAGA,aAAA,GAEA,EAAA,YAEA,EAAA,MAAA,WAGA,MAFA,cAAA,GACA,EAAA,KACA,EAAA,OAAA,EAAA,MAAA,UAGA,EAAA,WAAA,WACA,OAAA,GACA,EAAA,QACA,EAAA,MAAA,OALA,EAAA,QAOA,EAAA,KAAA,WACA,EAAA,MAAA,EAAA,YAAA,eAAA,EACA,IAAA,GAAA,EAAA,UAAA,EAAA,KACA,EAAA,EAAA,UAAA,KAAA,CAEA,IACA,EAAA,SAEA,EAAA,EAAA,SAAA,EAAA,EAAA,cAIA,EAAA,KACA,IAAA,UACA,KAAA,UACA,QAAA,QACA,WAAA,WACA,SAAA,EAAA,WAEA,EAAA,WACA,EAAA,SAAA,EAAA,WAEA,EAAA,MACA,EAAA,SAAA,EAAA,YAAA,IAAA,EAAA,MAEA,EAAA,aACA,EAAA,SAAA,EAAA,aACA,EAAA,MAAA,EAAA,EAAA,EAAA,WACA,EAAA,MAAA,EAAA,YAAA,QAAA,KAEA,EAAA,SAAA,EAAA,UAAA,EACA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,SAAA,EAAA,UACA,EAAA,WACA,EAAA,kBAEA,EAAA,KAAA,WAAA,cAIA,EAAA,WACA,UAAA,EAAA,SACA,EAAA,QACA,EAAA,GAAA,QAAA,EAAA,WAEA,EAAA,GAAA,QAAA,EAAA,iBAIA,EAAA,MAAA,WAGA,MAFA,cAAA,GACA,EAAA,MACA,EAAA,OAAA,EAAA,MAAA,UAGA,EAAA,WAAA,WACA,QAAA,GACA,EAAA,QAEA,EAAA,MAAA,OANA,EAAA,QAQA,EAAA,KAAA,SAAA,GACA,EAAA,WAEA,EAAA,MAAA,EAAA,YAAA,eAAA,GACA,EAAA,MAAA,EAAA,WAGA,MAFA,GAAA,MAAA,EAAA,YAAA,QAAA,GAEA,GAAA,UAAA,EAAA,QACA,EAAA,GAAA,OADA,SAIA,EAAA,SAAA,EAAA,UAAA,EACA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,SAAA,EAAA,UAEA,EAAA,UAAA,OAAA,GACA,EAAA,IAAA,QAAA,EAAA,YAGA,EAAA,OAAA,WACA,EAAA,SAAA,EAAA,QAAA,EAAA,SAEA,EAAA,MAAA,WACA,EAAA,GAAA,SAGA,EAAA,gBAAA,WACA,GAAA,EAAA,CAGA,GAAA,GAAA,IAEA,EAAA,EAAA,KAAA,eAAA,EAAA,EAAA,KAAA,gBAEA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,EAEA,GAAA,KAAA,KACA,EAAA,MAAA,KACA,EAAA,IAAA,KAEA,EAAA,SAAA,SAAA,GACA,KAAA,EAAA,OAAA,EAAA,WACA,EAAA,OACA,EAAA,oBAGA,EAAA,cAAA,SAAA,GACA,KAAA,EAAA,QACA,EAAA,GAAA,OACA,EAAA,oBAGA,EAAA,yBAAA,SAAA,GACA,EAAA,iBACA,EAAA,kBAEA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,SA8DA,EAGA,QAAA,GAAA,EAAA,GACA,MAAA,SAAA,SAAA,GAAA,GAAA,iBAAA,IAEA,QAAA,GAAA,GACA,MAAA,GAAA,KAAA,EAAA,IAAA,IAAA,EAAA,IAAA,IAAA,KAAA,SAAA,GACA,MAAA,SAAA,SAAA,IACA,EAAA,IAAA,EAAA,EAAA,MACA,EAAA,MAEA,IAtUA,GAAA,GAAA,OAAA,UAAA,KACA,EAAA,eAAA,GAAA,SACA,EAAA,aAuUA,OAAA,OAGA,UAAA,aACA,UACA,YACA,OACA,WACA,QACA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OACA,SAAA,MACA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAEA,GAAA,IAAA,MAAA,EACA,SAAA,SACA,WACA,kBACA,YACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,eACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAGA,QAAA,SAAA,SAAA,SAAA,GACA,EAAA,SAAA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,EAAA,YAAA,GACA,QAAA,UAAA,IAAA,EAAA,WACA,GAAA,EAAA,wBAKA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,SAAA,EAAA,GACA,QAAA,SAAA,GACA,QAAA,OAAA,EAAA,GAEA,EAAA,MAAA,EAEA,QAAA,UAAA,IAAA,EAAA,WACA,GAAA,EAAA,sBAEA,GAEA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,SAAA,GACA,GAAA,QAAA,UAAA,KAEA,QAAA,SAAA,KACA,IAAA,EAAA,MAAA,kBACA,KAAA,EAAA,EAAA,OAAA,EAAA,SAGA,IAAA,GAAA,EAAA,EAAA,EAEA,GAAA,IAAA,WAAA,WACA,GClbA,EAAA,UACA,EAAA,KACA,EAAA,YAQA,QAAA,OAAA,4BACA,yBACA,wCACA,SAAA,aAAA,WACA,GAAA,GAAA,KAAA,UACA,UAAA,UACA,YAAA,YACA,YAAA,aACA,UAAA,cACA,SAAA,+BACA,QAAA,QACA,WAAA,EACA,UAAA,EACA,MAAA,EACA,MAAA,EACA,UAAA,EACA,OAAA,SACA,MAAA,EAEA,MAAA,MACA,UACA,aACA,WACA,SAAA,EAAA,EAAA,GAEA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,MAEA,EAAA,QAAA,UAAA,EAAA,EACA,GAAA,EAAA,EAAA,EACA,IAAA,GAAA,EAAA,MACA,EAAA,EAAA,MACA,GAAA,cAAA,WACA,EAAA,YACA,EAAA,aAAA,GAEA,EAAA,gBACA,EAAA,UAAA,SAAA,GACA,EAAA,aAAA,WACA,EAAA,SAAA,MAGA,EAAA,QAAA,SAAA,GACA,EAAA,aAAA,WACA,EAAA,OAAA,MAGA,EAAA,WAAA,WACA,MAAA,GAAA,cAGA,EAAA,OAAA,SAAA,GACA,EAAA,SAAA,EACA,EAAA,cAAA,EAAA,SACA,EAAA,aAAA,IAGA,EAAA,SAAA,SAAA,GACA,EAAA,aAAA,GAEA,EAAA,OAAA,SAAA,GACA,GAAA,GAAA,EAAA,SAAA,GAAA,KACA,GAAA,cAAA,GACA,EAAA,UACA,EAAA,gBACA,GACA,EAAA,UAEA,EAAA,MAAA,EAAA,YAAA,UAAA,EAAA,IAGA,EAAA,WAAA,WACA,MAAA,GAAA,WAAA,EAIA,EAAA,SAAA,QAAA,QAAA,SAAA,EAAA,aAAA,EAAA,WAAA,QAAA,EAAA,YAHA,EAAA,SAAA,QAKA,EAAA,UAAA,SAAA,GACA,GAAA,GAAA,EAAA,SAAA,OAAA,EAAA,CACA,IAAA,EAAA,CAEA,IAAA,EAAA,EAAA,KACA,EAAA,SAAA,GAAA,QAAA,IAGA,KAAA,EAAA,GAEA,MAAA,KAEA,EAAA,aAAA,SAAA,GAEA,EAAA,iBACA,EAAA,mBAEA,EAAA,WAAA,SAAA,GACA,aAAA,KAAA,EAAA,WAGA,EAAA,eACA,EAAA,iBACA,EAAA,mBAGA,KAAA,EAAA,SAAA,EAAA,SAAA,OACA,EAAA,OAAA,EAAA,cAEA,KAAA,EAAA,SAAA,EAAA,aAAA,EACA,EAAA,eACA,KAAA,EAAA,SAAA,EAAA,aAAA,EAAA,SAAA,OAAA,EACA,EAAA,eACA,QAAA,YAAA,EAAA,gBACA,EAAA,aAAA,GACA,EAAA,WAGA,IAAA,GAAA,EAAA,IACA,GAAA,KAAA,WACA,IACA,WAAA,WACA,EAAA,SAAA,GAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,GAAA,UAAA,EAAA,cAIA,IAAA,GAAA,EAAA,IAQA,OAPA,GAAA,KAAA,WACA,EAAA,SAAA,IAAA,YAAA,EAAA,cACA,EAAA,UACA,EAAA,IAAA,UAAA,EAAA,YAEA,KAEA,EA9GA,QAAA,QAAA,EAAA,SAAA,KAiHA,OADA,GAAA,SAAA,EACA,MAGA,UAAA,eACA,UACA,SACA,KACA,aACA,gBACA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,QACA,QACA,SAAA,MACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IAAA,MAAA,EACA,SAAA,SACA,YACA,YACA,QACA,UACA,WACA,OACA,YACA,WACA,SACA,QACA,YACA,eACA,cACA,SAAA,GACA,QAAA,UAAA,EAAA,MACA,EAAA,GAAA,EAAA,KAGA,IAAA,GAAA,EAAA,QAAA,EAAA,OACA,EAAA,EAAA,OAAA,EAAA,MACA,EAAA,EAAA,SACA,KACA,GAAA,MAAA,EAAA,eACA,IACA,GAAA,cAAA,EACA,IAAA,GAAA,EAAA,GAEA,EAAA,EAAA,EAAA,EAAA,EAEA,IAAA,EAAA,aAAA,CAEA,GAAA,GAAA,EAAA,OAAA,GAAA,QAAA,OAAA,IAAA,QAAA,UAAA,IAAA,MACA,GAAA,OAAA,EAAA,WAEA,EAAA,SAAA,EAAA,GAAA,KAAA,SAAA,GACA,EAAA,OAAA,GACA,EAAA,cAEA,GAGA,EAAA,OAAA,EAAA,QAAA,SAAA,GAEA,EAAA,YAAA,EAEA,EAAA,SAAA,EAAA,GAAA,KAAA,SAAA,GAGA,GAAA,EAAA,aAAA,EAAA,QAAA,EAAA,OAAA,EAEA,WADA,GAAA,cAAA,EAAA,WAAA,UAAA,EAAA,EAAA,WAAA,OAAA,GAGA,GAAA,OAAA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,IAAA,GAAA,EAAA,YACA,IAAA,EAAA,OAAA,IAEA,IAAA,EAAA,QAAA,EAAA,GAAA,QAAA,MAEA,GAAA,EAAA,OAAA,GAEA,EAAA,eAIA,EAAA,QAAA,WAEA,GAAA,EAAA,SAAA,EAAA,YACA,MAAA,GAAA,IAAA,GACA,IAAA,GAAA,EAAA,UAAA,EAAA,aACA,EAAA,QAAA,UAAA,GAAA,EAAA,OAAA,SAAA,GAAA,MAAA,EAAA,UACA,GAAA,QAAA,SAAA,GAAA,EAAA,MAAA,EACA,EAAA,IAAA,EAAA,QAAA,iBAAA,IAAA,SAGA,EAAA,IAAA,WAAA,WACA","sourcesContent":["\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.aside',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.button',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.navbar',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.typeahead',\n  'mgcrea.ngStrap.scrollspy',\n  'mgcrea.ngStrap.affix',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.collapse'\n]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.affix', ['mgcrea.ngStrap.helpers.dimensions', 'mgcrea.ngStrap.helpers.debounce'])\n\n  .provider('$affix', function() {\n\n    var defaults = this.defaults = {\n      offsetTop: 'auto'\n    };\n\n    this.$get = function($window, debounce, dimensions) {\n\n      var bodyEl = angular.element($window.document.body);\n      var windowEl = angular.element($window);\n\n      function AffixFactory(element, config) {\n\n        var $affix = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var targetEl = options.target;\n\n        // Initial private vars\n        var reset = 'affix affix-top affix-bottom',\n            initialAffixTop = 0,\n            initialOffsetTop = 0,\n            offsetTop = 0,\n            offsetBottom = 0,\n            affixed = null,\n            unpin = null;\n\n        var parent = element.parent();\n        // Options: custom parent\n        if (options.offsetParent) {\n          if (options.offsetParent.match(/^\\d+$/)) {\n            for (var i = 0; i < (options.offsetParent * 1) - 1; i++) {\n              parent = parent.parent();\n            }\n          }\n          else {\n            parent = angular.element(options.offsetParent);\n          }\n        }\n\n        $affix.init = function() {\n\n          $affix.$parseOffsets();\n          initialOffsetTop = dimensions.offset(element[0]).top + initialAffixTop;\n\n          // Bind events\n          targetEl.on('scroll', $affix.checkPosition);\n          targetEl.on('click', $affix.checkPositionWithEventLoop);\n          windowEl.on('resize', $affix.$debouncedOnResize);\n\n          // Both of these checkPosition() calls are necessary for the case where\n          // the user hits refresh after scrolling to the bottom of the page.\n          $affix.checkPosition();\n          $affix.checkPositionWithEventLoop();\n\n        };\n\n        $affix.destroy = function() {\n\n          // Unbind events\n          targetEl.off('scroll', $affix.checkPosition);\n          targetEl.off('click', $affix.checkPositionWithEventLoop);\n          windowEl.off('resize', $affix.$debouncedOnResize);\n\n        };\n\n        $affix.checkPositionWithEventLoop = function() {\n\n          setTimeout($affix.checkPosition, 1);\n\n        };\n\n        $affix.checkPosition = function() {\n          // if (!this.$element.is(':visible')) return\n\n          var scrollTop = getScrollTop();\n          var position = dimensions.offset(element[0]);\n          var elementHeight = dimensions.height(element[0]);\n\n          // Get required affix class according to position\n          var affix = getRequiredAffixClass(unpin, position, elementHeight);\n\n          // Did affix status changed this last check?\n          if(affixed === affix) return;\n          affixed = affix;\n\n          // Add proper affix class\n          element.removeClass(reset).addClass('affix' + ((affix !== 'middle') ? '-' + affix : ''));\n\n          if(affix === 'top') {\n            unpin = null;\n            element.css('position', (options.offsetParent) ? '' : 'relative');\n            element.css('top', '');\n          } else if(affix === 'bottom') {\n            if (options.offsetUnpin) {\n              unpin = -(options.offsetUnpin * 1);\n            }\n            else {\n              // Calculate unpin threshold when affixed to bottom.\n              // Hopefully the browser scrolls pixel by pixel.\n              unpin = position.top - scrollTop;\n            }\n            element.css('position', (options.offsetParent) ? '' : 'relative');\n            element.css('top', (options.offsetParent) ? '' : ((bodyEl[0].offsetHeight - offsetBottom - elementHeight - initialOffsetTop) + 'px'));\n          } else { // affix === 'middle'\n            unpin = null;\n            element.css('position', 'fixed');\n            element.css('top', initialAffixTop + 'px');\n          }\n\n        };\n\n        $affix.$onResize = function() {\n          $affix.$parseOffsets();\n          $affix.checkPosition();\n        };\n        $affix.$debouncedOnResize = debounce($affix.$onResize, 50);\n\n        $affix.$parseOffsets = function() {\n\n          // Reset position to calculate correct offsetTop\n          element.css('position', (options.offsetParent) ? '' : 'relative');\n\n          if(options.offsetTop) {\n            if(options.offsetTop === 'auto') {\n              options.offsetTop = '+0';\n            }\n            if(options.offsetTop.match(/^[-+]\\d+$/)) {\n              initialAffixTop = - options.offsetTop * 1;\n              if(options.offsetParent) {\n                offsetTop = dimensions.offset(parent[0]).top + (options.offsetTop * 1);\n              }\n              else {\n                offsetTop = dimensions.offset(element[0]).top - dimensions.css(element[0], 'marginTop', true) + (options.offsetTop * 1);\n              }\n            }\n            else {\n              offsetTop = options.offsetTop * 1;\n            }\n          }\n\n          if(options.offsetBottom) {\n            if(options.offsetParent && options.offsetBottom.match(/^[-+]\\d+$/)) {\n              // add 1 pixel due to rounding problems...\n              offsetBottom = getScrollHeight() - (dimensions.offset(parent[0]).top + dimensions.height(parent[0])) + (options.offsetBottom * 1) + 1;\n            }\n            else {\n              offsetBottom = options.offsetBottom * 1;\n            }\n          }\n\n        };\n\n        // Private methods\n\n        function getRequiredAffixClass(unpin, position, elementHeight) {\n\n          var scrollTop = getScrollTop();\n          var scrollHeight = getScrollHeight();\n\n          if(scrollTop <= offsetTop) {\n            return 'top';\n          } else if(unpin !== null && (scrollTop + unpin <= position.top)) {\n            return 'middle';\n          } else if(offsetBottom !== null && (position.top + elementHeight + initialAffixTop >= scrollHeight - offsetBottom)) {\n            return 'bottom';\n          } else {\n            return 'middle';\n          }\n\n        }\n\n        function getScrollTop() {\n          return targetEl[0] === $window ? $window.pageYOffset : targetEl[0].scrollTop;\n        }\n\n        function getScrollHeight() {\n          return targetEl[0] === $window ? $window.document.body.scrollHeight : targetEl[0].scrollHeight;\n        }\n\n        $affix.init();\n        return $affix;\n\n      }\n\n      return AffixFactory;\n\n    };\n\n  })\n\n  .directive('bsAffix', function($affix, $window) {\n\n    return {\n      restrict: 'EAC',\n      require: '^?bsAffixTarget',\n      link: function postLink(scope, element, attr, affixTarget) {\n\n        var options = {scope: scope, offsetTop: 'auto', target: affixTarget ? affixTarget.$element : angular.element($window)};\n        angular.forEach(['offsetTop', 'offsetBottom', 'offsetParent', 'offsetUnpin'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var affix = $affix(element, options);\n        scope.$on('$destroy', function() {\n          affix && affix.destroy();\n          options = null;\n          affix = null;\n        });\n\n      }\n    };\n\n  })\n\n  .directive('bsAffixTarget', function() {\n    return {\n      controller: function($element) {\n        this.$element = $element;\n      }\n    };\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\n\n  .provider('$aside', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade-and-slide-right',\n      prefixClass: 'aside',\n      placement: 'right',\n      template: 'aside/aside.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($modal) {\n\n      function AsideFactory(config) {\n\n        var $aside = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $aside = $modal(options);\n\n        return $aside;\n\n      }\n\n      return AsideFactory;\n\n    };\n\n  })\n\n  .directive('bsAside', function($window, $sce, $aside) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize aside\n        var aside = $aside(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', aside.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (aside) aside.destroy();\n          options = null;\n          aside = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\n// @BUG: following snippet won't compile correctly\n// @TODO: submit issue to core\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      placement: null,\n      template: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissable: true\n    };\n\n    this.$get = function($modal, $timeout) {\n\n      function AlertFactory(config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissable]\n        $alert.$scope.dismissable = !!options.dismissable;\n        if(options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if(options.duration) {\n          $alert.show = function() {\n            show();\n            $timeout(function() {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function($window, $sce, $alert) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.button', [])\n\n  .provider('$button', function() {\n\n    var defaults = this.defaults = {\n      activeClass:'active',\n      toggleEvent:'click'\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsCheckboxGroup', function() {\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      compile: function postLink(element, attr) {\n        element.attr('data-toggle', 'buttons');\n        element.removeAttr('ng-model');\n        var children = element[0].querySelectorAll('input[type=\"checkbox\"]');\n        angular.forEach(children, function(child) {\n          var childEl = angular.element(child);\n          childEl.attr('bs-checkbox', '');\n          childEl.attr('ng-model', attr.ngModel + '.' + childEl.attr('value'));\n        });\n      }\n\n    };\n\n  })\n\n  .directive('bsCheckbox', function($button, $$rAF) {\n\n    var defaults = $button.defaults;\n    var constantValueRegExp = /^(true|false|\\d+)$/;\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        var options = defaults;\n\n        // Support label > input[type=\"checkbox\"]\n        var isInput = element[0].nodeName === 'INPUT';\n        var activeElement = isInput ? element.parent() : element;\n\n        var trueValue = angular.isDefined(attr.trueValue) ? attr.trueValue : true;\n        if(constantValueRegExp.test(attr.trueValue)) {\n          trueValue = scope.$eval(attr.trueValue);\n        }\n        var falseValue = angular.isDefined(attr.falseValue) ? attr.falseValue : false;\n        if(constantValueRegExp.test(attr.falseValue)) {\n          falseValue = scope.$eval(attr.falseValue);\n        }\n\n        // Parse exotic values\n        var hasExoticValues = typeof trueValue !== 'boolean' || typeof falseValue !== 'boolean';\n        if(hasExoticValues) {\n          controller.$parsers.push(function(viewValue) {\n            // console.warn('$parser', element.attr('ng-model'), 'viewValue', viewValue);\n            return viewValue ? trueValue : falseValue;\n          });\n          // Fix rendering for exotic values\n          scope.$watch(attr.ngModel, function(newValue, oldValue) {\n            controller.$render();\n          });\n        }\n\n        // model -> view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var isActive = angular.equals(controller.$modelValue, trueValue);\n          $$rAF(function() {\n            if(isInput) element[0].checked = isActive;\n            activeElement.toggleClass(options.activeClass, isActive);\n          });\n        };\n\n        // view -> model\n        element.bind(options.toggleEvent, function() {\n          scope.$apply(function () {\n            // console.warn('!click', element.attr('ng-model'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\n            if(!isInput) {\n              controller.$setViewValue(!activeElement.hasClass('active'));\n            }\n            if(!hasExoticValues) {\n              controller.$render();\n            }\n          });\n        });\n\n      }\n\n    };\n\n  })\n\n  .directive('bsRadioGroup', function() {\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      compile: function postLink(element, attr) {\n        element.attr('data-toggle', 'buttons');\n        element.removeAttr('ng-model');\n        var children = element[0].querySelectorAll('input[type=\"radio\"]');\n        angular.forEach(children, function(child) {\n          angular.element(child).attr('bs-radio', '');\n          angular.element(child).attr('ng-model', attr.ngModel);\n        });\n      }\n\n    };\n\n  })\n\n  .directive('bsRadio', function($button, $$rAF) {\n\n    var defaults = $button.defaults;\n    var constantValueRegExp = /^(true|false|\\d+)$/;\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        var options = defaults;\n\n        // Support `label > input[type=\"radio\"]` markup\n        var isInput = element[0].nodeName === 'INPUT';\n        var activeElement = isInput ? element.parent() : element;\n\n        var value = constantValueRegExp.test(attr.value) ? scope.$eval(attr.value) : attr.value;\n\n        // model -> view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('value'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var isActive = angular.equals(controller.$modelValue, value);\n          $$rAF(function() {\n            if(isInput) element[0].checked = isActive;\n            activeElement.toggleClass(options.activeClass, isActive);\n          });\n        };\n\n        // view -> model\n        element.bind(options.toggleEvent, function() {\n          scope.$apply(function () {\n            // console.warn('!click', element.attr('value'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\n            controller.$setViewValue(value);\n            controller.$render();\n          });\n        });\n\n      }\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.collapse', [])\n\n  .provider('$collapse', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-collapse',\n      disallowToggle: false,\n      activeClass: 'in'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'disallowToggle', 'activeClass'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      self.$toggles = [];\n      self.$targets = [];\n\n      self.$viewChangeListeners = [];\n\n      self.$registerToggle = function(element) {\n        self.$toggles.push(element);\n      };\n      self.$registerTarget = function(element) {\n        self.$targets.push(element);\n      };\n\n      self.$targets.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        if(!self.$options.disallowToggle) {\n          self.$targets.$active = self.$targets.$active === value ? -1 : value;\n        } else {\n          self.$targets.$active = value;\n        }\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $collapse = {};\n      $collapse.defaults = defaults;\n      $collapse.controller = controller;\n      return $collapse;\n    };\n\n  })\n\n  .directive('bsCollapse', function($window, $animate, $collapse) {\n\n    var defaults = $collapse.defaults;\n\n    return {\n      require: ['?ngModel', 'bsCollapse'],\n      controller: $collapse.controller,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        if(ngModelCtrl) {\n\n          // Update the modelValue following\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$targets.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsCollapseCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseToggle', function() {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base attr\n        element.attr('data-toggle', 'collapse');\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerToggle(element);\n        element.on('click', function() {\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\n          bsCollapseCtrl.$setActive(index * 1);\n          scope.$apply();\n        });\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseTarget', function($animate) {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      // scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('collapse');\n\n        // Add animation class\n        if(bsCollapseCtrl.$options.animation) {\n          element.addClass(bsCollapseCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerTarget(element);\n\n        function render() {\n          var index = bsCollapseCtrl.$targets.indexOf(element);\n          var active = bsCollapseCtrl.$targets.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsCollapseCtrl.$options.activeClass);\n        }\n\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.datepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.tooltip'])\n\n  .provider('$datepicker', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'datepicker',\n      placement: 'bottom-left',\n      template: 'datepicker/datepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      // lang: $locale.id,\n      useNative: false,\n      dateType: 'date',\n      dateFormat: 'shortDate',\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      startView: 0,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'glyphicon glyphicon-chevron-left',\n      iconRight: 'glyphicon glyphicon-chevron-right'\n    };\n\n    this.$get = function($window, $document, $rootScope, $sce, $locale, dateFilter, datepickerViews, $tooltip) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      if(!defaults.lang) defaults.lang = $locale.id;\n\n      function DatepickerFactory(element, controller, config) {\n\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $datepicker.$options;\n        var scope = $datepicker.$scope;\n        if(options.startView) options.startView -= options.minView;\n\n        // View vars\n\n        var pickerViews = datepickerViews($datepicker);\n        $datepicker.$views = pickerViews.views;\n        var viewDate = pickerViews.viewDate;\n        scope.$mode = options.startView;\n        scope.$iconLeft = options.iconLeft;\n        scope.$iconRight = options.iconRight;\n        var $picker = $datepicker.$views[scope.$mode];\n\n        // Scope methods\n\n        scope.$select = function(date) {\n          $datepicker.select(date);\n        };\n        scope.$selectPane = function(value) {\n          $datepicker.$selectPane(value);\n        };\n        scope.$toggleMode = function() {\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n        };\n\n        // Public methods\n\n        $datepicker.update = function(date) {\n          // console.warn('$datepicker.update() newValue=%o', date);\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\n            $datepicker.$date = date;\n            $picker.update.call($picker, date);\n          }\n          // Build only if pristine\n          $datepicker.$build(true);\n        };\n\n        $datepicker.updateDisabledDates = function(dateRanges) {\n          options.disabledDateRanges = dateRanges;\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n          }\n        };\n\n        $datepicker.select = function(date, keep) {\n          // console.warn('$datepicker.select', date, scope.$mode);\n          if(!angular.isDate(controller.$dateValue)) controller.$dateValue = new Date(date);\n          if(!scope.$mode || keep) {\n            controller.$setViewValue(angular.copy(date));\n            controller.$render();\n            if(options.autoclose && !keep) {\n              $datepicker.hide(true);\n            }\n          } else {\n            angular.extend(viewDate, {year: date.getFullYear(), month: date.getMonth(), date: date.getDate()});\n            $datepicker.setMode(scope.$mode - 1);\n            $datepicker.$build();\n          }\n        };\n\n        $datepicker.setMode = function(mode) {\n          // console.warn('$datepicker.setMode', mode);\n          scope.$mode = mode;\n          $picker = $datepicker.$views[scope.$mode];\n          $datepicker.$build();\n        };\n\n        // Protected methods\n\n        $datepicker.$build = function(pristine) {\n          // console.warn('$datepicker.$build() viewDate=%o', viewDate);\n          if(pristine === true && $picker.built) return;\n          if(pristine === false && !$picker.built) return;\n          $picker.build.call($picker);\n        };\n\n        $datepicker.$updateSelected = function() {\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], updateSelected);\n          }\n        };\n\n        $datepicker.$isSelected = function(date) {\n          return $picker.isSelected(date);\n        };\n\n        $datepicker.$setDisabledEl = function(el) {\n          el.disabled = $picker.isDisabled(el.date);\n        };\n\n        $datepicker.$selectPane = function(value) {\n          var steps = $picker.steps;\n          var targetDate = new Date(Date.UTC(viewDate.year + ((steps.year || 0) * value), viewDate.month + ((steps.month || 0) * value), viewDate.date + ((steps.day || 0) * value)));\n          angular.extend(viewDate, {year: targetDate.getUTCFullYear(), month: targetDate.getUTCMonth(), date: targetDate.getUTCDate()});\n          $datepicker.$build();\n        };\n\n        $datepicker.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $datepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          if(evt.keyCode === 13) {\n            if(!scope.$mode) {\n              return $datepicker.hide(true);\n            } else {\n              return scope.$apply(function() { $datepicker.setMode(scope.$mode - 1); });\n            }\n          }\n\n          // Navigate with keyboard\n          $picker.onKeyDown(evt);\n          parentScope.$digest();\n        };\n\n        // Private\n\n        function updateSelected(el) {\n          el.selected = $datepicker.$isSelected(el.date);\n        }\n\n        function focusElement() {\n          element[0].focus();\n        }\n\n        // Overrides\n\n        var _init = $datepicker.init;\n        $datepicker.init = function() {\n          if(isNative && options.useNative) {\n            element.prop('type', 'date');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if(isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n\n        var _destroy = $datepicker.destroy;\n        $datepicker.destroy = function() {\n          if(isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n\n        var _show = $datepicker.show;\n        $datepicker.show = function() {\n          _show();\n          setTimeout(function() {\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $datepicker.$onKeyDown);\n            }\n          });\n        };\n\n        var _hide = $datepicker.hide;\n        $datepicker.hide = function(blur) {\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $datepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n\n        return $datepicker;\n\n      }\n\n      DatepickerFactory.defaults = defaults;\n      return DatepickerFactory;\n\n    };\n\n  })\n\n  .directive('bsDatepicker', function($window, $parse, $q, $locale, dateFilter, $datepicker, $dateParser, $timeout) {\n\n    var defaults = $datepicker.defaults;\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n    var isNumeric = function(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, controller: controller};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'dateType', 'dateFormat', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!datepicker || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(datepicker),?');\n          newValue === true ? datepicker.show() : datepicker.hide();\n        });\n\n        // Initialize datepicker\n        var datepicker = $datepicker(element, controller, options);\n        options = datepicker.$options;\n        // Set expected iOS format\n        if(isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n\n        // Observe attributes for changes\n        angular.forEach(['minDate', 'maxDate'], function(key) {\n          // console.warn('attr.$observe(%s)', key, attr[key]);\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\n            // console.warn('attr.$observe(%s)=%o', key, newValue);\n            if(newValue === 'today') {\n              var today = new Date();\n              datepicker.$options[key] = +new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n            } else if(angular.isString(newValue) && newValue.match(/^\".+\"$/)) { // Support {{ dateObj }}\n              datepicker.$options[key] = +new Date(newValue.substr(1, newValue.length - 2));\n            } else if(isNumeric(newValue)) {\n              datepicker.$options[key] = +new Date(parseInt(newValue, 10));\n            } else if (angular.isString(newValue) && 0 === newValue.length) { // Reset date\n              datepicker.$options[key] = key === 'maxDate' ? +Infinity : -Infinity;\n            } else {\n              datepicker.$options[key] = +new Date(newValue);\n            }\n            // Build only if dirty\n            !isNaN(datepicker.$options[key]) && datepicker.$build(false);\n          });\n        });\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          datepicker.update(controller.$dateValue);\n        }, true);\n\n        // Normalize undefined/null/empty array,\n        // so that we don't treat changing from undefined->null as a change.\n        function normalizeDateRanges(ranges) {\n          if (!ranges || !ranges.length) return null;\n          return ranges;\n        }\n\n        if (angular.isDefined(attr.disabledDates)) {\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n            disabledRanges = normalizeDateRanges(disabledRanges);\n            previousValue = normalizeDateRanges(previousValue);\n\n            if (disabledRanges !== previousValue) {\n              datepicker.updateDisabledDates(disabledRanges);\n            }\n          });\n        }\n\n        var dateParser = $dateParser({format: options.dateFormat, lang: options.lang, strict: options.strictFormat});\n\n        // viewValue -> $parsers -> modelValue\n        controller.$parsers.unshift(function(viewValue) {\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\n          // Null values should correctly reset the model value & validity\n          if(!viewValue) {\n            controller.$setValidity('date', true);\n            return;\n          }\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n          if(!parsedDate || isNaN(parsedDate.getTime())) {\n            controller.$setValidity('date', false);\n            return;\n          } else {\n            var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n            var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            // Only update the model when we have a valid date\n            if(isValid) controller.$dateValue = parsedDate;\n          }\n          if(options.dateType === 'string') {\n            return dateFilter(parsedDate, options.modelDateFormat || options.dateFormat);\n          } else if(options.dateType === 'number') {\n            return controller.$dateValue.getTime();\n          } else if(options.dateType === 'iso') {\n            return controller.$dateValue.toISOString();\n          } else {\n            return new Date(controller.$dateValue);\n          }\n        });\n\n        // modelValue -> $formatters -> viewValue\n        controller.$formatters.push(function(modelValue) {\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n          var date;\n          if(angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if(angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if(options.dateType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\n          } else {\n            date = new Date(modelValue);\n          }\n          // Setup default value?\n          // if(isNaN(date.getTime())) {\n          //   var today = new Date();\n          //   date = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0, 0);\n          // }\n          controller.$dateValue = date;\n          return controller.$dateValue;\n        });\n\n        // viewValue -> element\n        controller.$render = function() {\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\n          element.val(!controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : dateFilter(controller.$dateValue, options.dateFormat));\n        };\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if(datepicker) datepicker.destroy();\n          options = null;\n          datepicker = null;\n        });\n\n      }\n    };\n\n  })\n\n  .provider('datepickerViews', function() {\n\n    var defaults = this.defaults = {\n      dayFormat: 'dd',\n      daySplit: 7\n    };\n\n    // Split array into smaller arrays\n    function split(arr, size) {\n      var arrays = [];\n      while(arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n\n    // Modulus operator\n    function mod(n, m) {\n      return ((n % m) + m) % m;\n    }\n\n    this.$get = function($locale, $sce, dateFilter) {\n\n      return function(picker) {\n\n        var scope = picker.$scope;\n        var options = picker.$options;\n\n        var weekDaysMin = $locale.DATETIME_FORMATS.SHORTDAY;\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = picker.$date || (options.startDate ? new Date(options.startDate) : new Date());\n        var viewDate = {year: startDate.getFullYear(), month: startDate.getMonth(), date: startDate.getDate()};\n        var timezoneOffset = startDate.getTimezoneOffset() * 6e4;\n\n        var views = [{\n            format: options.dayFormat,\n            split: 7,\n            steps: { month: 1 },\n            update: function(date, force) {\n              if(!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$build();\n              } else if(date.getDate() !== viewDate.date) {\n                viewDate.date = picker.$date.getDate();\n                picker.$updateSelected();\n              }\n            },\n            build: function() {\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1), firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5), firstDateOffset = firstDate.getTimezoneOffset();\n              var today = new Date().toDateString();\n              // Handle daylight time switch\n              if(firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 60e3);\n              var days = [], day;\n              for(var i = 0; i < 42; i++) { // < 7 * 6\n                day = new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i);\n                days.push({date: day, isToday: day.toDateString() === today, label: dateFilter(day, this.format), selected: picker.$date && this.isSelected(day), muted: day.getMonth() !== viewDate.month, disabled: this.isDisabled(day)});\n              }\n              scope.title = dateFilter(firstDayOfMonth, 'MMMM yyyy');\n              scope.showLabels = true;\n              scope.labels = weekDaysLabelsHtml;\n              scope.rows = split(days, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n            },\n            isDisabled: function(date) {\n              var time = date.getTime();\n\n              // Disabled because of min/max date.\n              if (time < options.minDate || time > options.maxDate) return true;\n\n              // Disabled due to being a disabled day of the week\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n\n              // Disabled because of disabled date range.\n              if (options.disabledDateRanges) {\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                  if (time >= options.disabledDateRanges[i].start) {\n                    if (time <= options.disabledDateRanges[i].end) return true;\n\n                    // The disabledDateRanges is expected to be sorted, so if time >= start,\n                    // we know it's not disabled.\n                    return false;\n                  }\n                }\n              }\n\n              return false;\n            },\n            onKeyDown: function(evt) {\n              var actualTime = picker.$date.getTime();\n              var newDate;\n\n              if(evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5);\n              else if(evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5);\n              else if(evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5);\n              else if(evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\n            }\n          }, {\n            name: 'month',\n            format: 'MMM',\n            split: 4,\n            steps: { year: 1 },\n            update: function(date, force) {\n              if(!this.built || date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$build();\n              } else if(date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$updateSelected();\n              }\n            },\n            build: function() {\n              var firstMonth = new Date(viewDate.year, 0, 1);\n              var months = [], month;\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate.year, i, 1);\n                months.push({date: month, label: dateFilter(month, this.format), selected: picker.$isSelected(month), disabled: this.isDisabled(month)});\n              }\n              scope.title = dateFilter(month, 'yyyy');\n              scope.showLabels = false;\n              scope.rows = split(months, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              var actualMonth = picker.$date.getMonth();\n              var newDate = new Date(picker.$date);\n\n              if(evt.keyCode === 37) newDate.setMonth(actualMonth - 1);\n              else if(evt.keyCode === 38) newDate.setMonth(actualMonth - 4);\n              else if(evt.keyCode === 39) newDate.setMonth(actualMonth + 1);\n              else if(evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\n            }\n          }, {\n            name: 'year',\n            format: 'yyyy',\n            split: 4,\n            steps: { year: 12 },\n            update: function(date, force) {\n              if(!this.built || force || parseInt(date.getFullYear()/20, 10) !== parseInt(viewDate.year/20, 10)) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$build();\n              } else if(date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$updateSelected();\n              }\n            },\n            build: function() {\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n              var years = [], year;\n              for (var i = 0; i < 12; i++) {\n                year = new Date(firstYear + i, 0, 1);\n                years.push({date: year, label: dateFilter(year, this.format), selected: picker.$isSelected(year), disabled: this.isDisabled(year)});\n              }\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\n              scope.showLabels = false;\n              scope.rows = split(years, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              var actualYear = picker.$date.getFullYear(),\n                  newDate = new Date(picker.$date);\n\n              if(evt.keyCode === 37) newDate.setYear(actualYear - 1);\n              else if(evt.keyCode === 38) newDate.setYear(actualYear - 4);\n              else if(evt.keyCode === 39) newDate.setYear(actualYear + 1);\n              else if(evt.keyCode === 40) newDate.setYear(actualYear + 4);\n\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\n            }\n          }];\n\n        return {\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n          viewDate: viewDate\n        };\n\n      };\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      placement: 'bottom-left',\n      template: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $tooltip) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory(element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function(evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if(!items.length) return;\n          var index;\n          angular.forEach(items, function(el, i) {\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if(evt.keyCode === 38 && index > 0) index--;\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\n          else if(angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function() {\n          show();\n          setTimeout(function() {\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          });\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function() {\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\n          hide();\n        };\n\n        // Private functions\n\n        function onBodyClick(evt) {\n          if(evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as an object\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\n          scope.content = newValue;\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!dropdown || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(dropdown),?');\n          newValue === true ? dropdown.show() : dropdown.hide();\n        });\n\n        // Initialize dropdown\n        var dropdown = $dropdown(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (dropdown) dropdown.destroy();\n          options = null;\n          dropdown = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function($localeProvider) {\n\n  var proto = Date.prototype;\n\n  function noop() {\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function($locale, dateFilter) {\n\n    var DateParserFactory = function(config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}',\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function(value) { var hours = this.getHours(); return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function(value) { return this.setMonth($locale.DATETIME_FORMATS.MONTH.indexOf(value)); },\n        'MMM'   : function(value) { return this.setMonth($locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value)); },\n        'MM'    : function(value) { return this.setMonth(1 * value - 1); },\n        'M'     : function(value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function(value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : proto.setFullYear\n      };\n\n      var regex, setMap;\n\n      $dateParser.init = function() {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function(date) {\n        if(angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function(value, baseDate, format) {\n        if(angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if(!matches) return false;\n        var date = baseDate || new Date(0, 0, 1);\n        for(var i = 0; i < matches.length - 1; i++) {\n          formatSetMap[i] && formatSetMap[i].call(date, matches[i+1]);\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function setMapForFormat(format) {\n        var keys = Object.keys(setFnMap), i;\n        var map = [], sortedMap = [];\n        // Map to setFn\n        var clonedFormat = format;\n        for(i = 0; i < keys.length; i++) {\n          if(format.split(keys[i]).length > 1) {\n            var index = clonedFormat.search(keys[i]);\n            format = format.split(keys[i]).join('');\n            if(setFnMap[keys[i]]) {\n              map[index] = setFnMap[keys[i]];\n            }\n          }\n        }\n        // Sort result map\n        angular.forEach(map, function(v) {\n          // conditional required since angular.forEach broke around v1.2.21\n          // related pr: https://github.com/angular/angular.js/pull/8525\n          if(v) sortedMap.push(v);\n        });\n        return sortedMap;\n      }\n\n      function escapeReservedSymbols(text) {\n        return text.replace(/\\//g, '[\\\\/]').replace('/-/g', '[-]').replace(/\\./g, '[.]').replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function regExpForFormat(format) {\n        var keys = Object.keys(regExpMap), i;\n\n        var re = format;\n        // Abstract replaces to avoid collisions\n        for(i = 0; i < keys.length; i++) {\n          re = re.split(keys[i]).join('${' + i + '}');\n        }\n        // Replace abstracted values\n        for(i = 0; i < keys.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[keys[i]] + ')');\n        }\n        format = escapeReservedSymbols(format);\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.constant('debounce', function(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n  return function() {\n    context = this;\n    args = arguments;\n    timestamp = new Date();\n    var later = function() {\n      var last = (new Date()) - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      }\n    };\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    if (callNow) result = func.apply(context, args);\n    return result;\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.constant('throttle', function(func, wait, options) {\n  var context, args, result;\n  var timeout = null;\n  var previous = 0;\n  options || (options = {});\n  var later = function() {\n    previous = options.leading === false ? 0 : new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  };\n  return function() {\n    var now = new Date();\n    if (!previous && options.leading === false) previous = now;\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n});\n\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function($document, $window) {\n\n    var jqLite = angular.element;\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function(element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function(element, prop, extra) {\n      var value;\n      if (element.currentStyle) { //IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function(element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function(element) {\n\n      var offsetParentRect = {top: 0, left: 0},\n          offsetParentElement,\n          offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentElement\n        offsetParentElement = offsetParent(element);\n        offset = fn.offset(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentElement, 'html')) {\n          offsetParentRect = fn.offset(offsetParentElement);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentElement, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentElement, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    var offsetParent = function offsetParentElement(element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if(nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while(offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    };\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function(element, outer) {\n      var value = element.offsetHeight;\n      if(outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function(element, outer) {\n      var value = element.offsetWidth;\n      if(outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function() {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function($parse, $q) {\n\n      function ParseOptionsFactory(attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match, displayFn, valueName, keyName, groupByFn, valueFn, valuesFn;\n\n        $parseOptions.init = function() {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]),\n          valueName = match[4] || match[6],\n          keyName = match[5],\n          groupByFn = $parse(match[3] || ''),\n          valueFn = $parse(match[2] ? match[1] : valueName),\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function(scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function(values) {\n            $parseOptions.$values = values ? parseValues(values, scope) : {};\n            return $parseOptions.$values;\n          });\n        };\n\n        // Private functions\n\n        function parseValues(values, scope) {\n          return values.map(function(match, index) {\n            var locals = {}, label, value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals) || index;\n            return {label: label, value: value};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n","'use strict';\n\n(angular.version.minor < 3 && angular.version.dot < 14) && angular.module('ng')\n\n.factory('$$rAF', function($window, $timeout) {\n\n  var requestAnimationFrame = $window.requestAnimationFrame ||\n                              $window.webkitRequestAnimationFrame ||\n                              $window.mozRequestAnimationFrame;\n\n  var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                             $window.webkitCancelAnimationFrame ||\n                             $window.mozCancelAnimationFrame ||\n                             $window.webkitCancelRequestAnimationFrame;\n\n  var rafSupported = !!requestAnimationFrame;\n  var raf = rafSupported ?\n    function(fn) {\n      var id = requestAnimationFrame(fn);\n      return function() {\n        cancelAnimationFrame(id);\n      };\n    } :\n    function(fn) {\n      var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n      return function() {\n        $timeout.cancel(timer);\n      };\n    };\n\n  raf.supported = rafSupported;\n\n  return raf;\n\n});\n\n// .factory('$$animateReflow', function($$rAF, $document) {\n\n//   var bodyEl = $document[0].body;\n\n//   return function(fn) {\n//     //the returned function acts as the cancellation function\n//     return $$rAF(function() {\n//       //the line below will force the browser to perform a repaint\n//       //so that all the animated elements within the animation frame\n//       //will be properly updated and drawn on screen. This is\n//       //required to perform multi-class CSS based animations with\n//       //Firefox. DO NOT REMOVE THIS LINE.\n//       var a = bodyEl.offsetWidth + 1;\n//       fn();\n//     });\n//   };\n\n// });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      template: 'modal/modal.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var trim = String.prototype.trim;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        $modal.$promise = fetchTemplate(options.template);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Support scope as string options\n        forEach(['title', 'content'], function(key) {\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $modal.$promise = $modal.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]).removeAttr('ng-bind').html(contentTemplate);\n              // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n              if(!config.template) contentEl.next().remove();\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize modal\n        var modalLinker, modalElement;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        $modal.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          modalLinker = $compile(template);\n          $modal.init();\n        });\n\n        $modal.init = function() {\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function() {\n\n          // Remove element\n          if(modalElement) {\n            modalElement.remove();\n            modalElement = null;\n          }\n          if(backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $modal.show = function() {\n\n          scope.$emit(options.prefixEvent + '.show.before', $modal);\n          var parent;\n          if(angular.isElement(options.container)) {\n            parent = options.container;\n          } else {\n            parent = options.container ? findElement(options.container) : null;\n          }\n          var after = options.container ? null : options.element;\n\n          // Fetch a cloned element linked from template\n          modalElement = $modal.$element = modalLinker(scope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) {\n            if(options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if(options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null, function() {});\n          }\n          $animate.enter(modalElement, parent, after, function() {\n            scope.$emit(options.prefixEvent + '.show', $modal);\n          });\n          scope.$isShown = true;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          if(options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n          }\n          if(options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        };\n\n        $modal.hide = function() {\n\n          scope.$emit(options.prefixEvent + '.hide.before', $modal);\n          $animate.leave(modalElement, function() {\n            scope.$emit(options.prefixEvent + '.hide', $modal);\n            bodyElement.removeClass(options.prefixClass + '-open');\n            if(options.animation) {\n              bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n            }\n          });\n          if(options.backdrop) {\n            $animate.leave(backdropElement, function() {});\n          }\n          scope.$isShown = false;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n\n          // Unbind events\n          if(options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n          }\n          if(options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        };\n\n        $modal.toggle = function() {\n\n          scope.$isShown ? $modal.hide() : $modal.show();\n\n        };\n\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function(evt) {\n\n          if (evt.which === 27 && scope.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        // Private methods\n\n        function hideOnBackdropClick(evt) {\n          if(evt.target !== evt.currentTarget) return;\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      function fetchTemplate(template) {\n        return $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        });\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.navbar', [])\n\n  .provider('$navbar', function() {\n\n    var defaults = this.defaults = {\n      activeClass: 'active',\n      routeAttr: 'data-match-route',\n      strict: false\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsNavbar', function($window, $location, $navbar) {\n\n    var defaults = $navbar.defaults;\n\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = angular.copy(defaults);\n        angular.forEach(Object.keys(defaults), function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Watch for the $location\n        scope.$watch(function() {\n\n          return $location.path();\n\n        }, function(newValue, oldValue) {\n\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\n\n          angular.forEach(liElements, function(li) {\n\n            var liElement = angular.element(li);\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\n            if(options.strict) {\n              pattern = '^' + pattern + '$';\n            }\n            var regexp = new RegExp(pattern, ['i']);\n\n            if(regexp.test(newValue)) {\n              liElement.addClass(options.activeClass);\n            } else {\n              liElement.removeClass(options.activeClass);\n            }\n\n          });\n\n        });\n\n      }\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      container: false,\n      target: false,\n      placement: 'right',\n      template: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0\n    };\n\n    this.$get = function($tooltip) {\n\n      function PopoverFactory(element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if(options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'customClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\n              popover && popover.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\n            popover && popover.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!popover || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(popover),?');\n          newValue === true ? popover.show() : popover.hide();\n        });\n\n        // Initialize popover\n        var popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.scrollspy', ['mgcrea.ngStrap.helpers.debounce', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$scrollspy', function() {\n\n    // Pool of registered spies\n    var spies = this.$$spies = {};\n\n    var defaults = this.defaults = {\n      debounce: 150,\n      throttle: 100,\n      offset: 100\n    };\n\n    this.$get = function($window, $document, $rootScope, dimensions, debounce, throttle) {\n\n      var windowEl = angular.element($window);\n      var docEl = angular.element($document.prop('documentElement'));\n      var bodyEl = angular.element($window.document.body);\n\n      // Helper functions\n\n      function nodeName(element, name) {\n        return element[0].nodeName && element[0].nodeName.toLowerCase() === name.toLowerCase();\n      }\n\n      function ScrollSpyFactory(config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        if(!options.element) options.element = bodyEl;\n        var isWindowSpy = nodeName(options.element, 'body');\n        var scrollEl = isWindowSpy ? windowEl : options.element;\n        var scrollId = isWindowSpy ? 'window' : options.id;\n\n        // Use existing spy\n        if(spies[scrollId]) {\n          spies[scrollId].$$count++;\n          return spies[scrollId];\n        }\n\n        var $scrollspy = {};\n\n        // Private vars\n        var unbindViewContentLoaded, unbindIncludeContentLoaded;\n        var trackedElements = $scrollspy.$trackedElements = [];\n        var sortedElements = [];\n        var activeTarget;\n        var debouncedCheckPosition;\n        var throttledCheckPosition;\n        var debouncedCheckOffsets;\n        var viewportHeight;\n        var scrollTop;\n\n        $scrollspy.init = function() {\n\n          // Setup internal ref counter\n          this.$$count = 1;\n\n          // Bind events\n          debouncedCheckPosition = debounce(this.checkPosition, options.debounce);\n          throttledCheckPosition = throttle(this.checkPosition, options.throttle);\n          scrollEl.on('click', this.checkPositionWithEventLoop);\n          windowEl.on('resize', debouncedCheckPosition);\n          scrollEl.on('scroll', throttledCheckPosition);\n\n          debouncedCheckOffsets = debounce(this.checkOffsets, options.debounce);\n          unbindViewContentLoaded = $rootScope.$on('$viewContentLoaded', debouncedCheckOffsets);\n          unbindIncludeContentLoaded = $rootScope.$on('$includeContentLoaded', debouncedCheckOffsets);\n          debouncedCheckOffsets();\n\n          // Register spy for reuse\n          if(scrollId) {\n            spies[scrollId] = $scrollspy;\n          }\n\n        };\n\n        $scrollspy.destroy = function() {\n\n          // Check internal ref counter\n          this.$$count--;\n          if(this.$$count > 0) {\n            return;\n          }\n\n          // Unbind events\n          scrollEl.off('click', this.checkPositionWithEventLoop);\n          windowEl.off('resize', debouncedCheckPosition);\n          scrollEl.off('scroll', debouncedCheckPosition);\n          unbindViewContentLoaded();\n          unbindIncludeContentLoaded();\n          if (scrollId) {\n            delete spies[scrollId];\n          }\n        };\n\n        $scrollspy.checkPosition = function() {\n\n          // Not ready yet\n          if(!sortedElements.length) return;\n\n          // Calculate the scroll position\n          scrollTop = (isWindowSpy ? $window.pageYOffset : scrollEl.prop('scrollTop')) || 0;\n\n          // Calculate the viewport height for use by the components\n          viewportHeight = Math.max($window.innerHeight, docEl.prop('clientHeight'));\n\n          // Activate first element if scroll is smaller\n          if(scrollTop < sortedElements[0].offsetTop && activeTarget !== sortedElements[0].target) {\n            return $scrollspy.$activateElement(sortedElements[0]);\n          }\n\n          // Activate proper element\n          for (var i = sortedElements.length; i--;) {\n            if(angular.isUndefined(sortedElements[i].offsetTop) || sortedElements[i].offsetTop === null) continue;\n            if(activeTarget === sortedElements[i].target) continue;\n            if(scrollTop < sortedElements[i].offsetTop) continue;\n            if(sortedElements[i + 1] && scrollTop > sortedElements[i + 1].offsetTop) continue;\n            return $scrollspy.$activateElement(sortedElements[i]);\n          }\n\n        };\n\n        $scrollspy.checkPositionWithEventLoop = function() {\n          setTimeout(this.checkPosition, 1);\n        };\n\n        // Protected methods\n\n        $scrollspy.$activateElement = function(element) {\n          if(activeTarget) {\n            var activeElement = $scrollspy.$getTrackedElement(activeTarget);\n            if(activeElement) {\n              activeElement.source.removeClass('active');\n              if(nodeName(activeElement.source, 'li') && nodeName(activeElement.source.parent().parent(), 'li')) {\n                activeElement.source.parent().parent().removeClass('active');\n              }\n            }\n          }\n          activeTarget = element.target;\n          element.source.addClass('active');\n          if(nodeName(element.source, 'li') && nodeName(element.source.parent().parent(), 'li')) {\n            element.source.parent().parent().addClass('active');\n          }\n        };\n\n        $scrollspy.$getTrackedElement = function(target) {\n          return trackedElements.filter(function(obj) {\n            return obj.target === target;\n          })[0];\n        };\n\n        // Track offsets behavior\n\n        $scrollspy.checkOffsets = function() {\n\n          angular.forEach(trackedElements, function(trackedElement) {\n            var targetElement = document.querySelector(trackedElement.target);\n            trackedElement.offsetTop = targetElement ? dimensions.offset(targetElement).top : null;\n            if(options.offset && trackedElement.offsetTop !== null) trackedElement.offsetTop -= options.offset * 1;\n          });\n\n          sortedElements = trackedElements\n          .filter(function(el) {\n            return el.offsetTop !== null;\n          })\n          .sort(function(a, b) {\n            return a.offsetTop - b.offsetTop;\n          });\n\n          debouncedCheckPosition();\n\n        };\n\n        $scrollspy.trackElement = function(target, source) {\n          trackedElements.push({target: target, source: source});\n        };\n\n        $scrollspy.untrackElement = function(target, source) {\n          var toDelete;\n          for (var i = trackedElements.length; i--;) {\n            if(trackedElements[i].target === target && trackedElements[i].source === source) {\n              toDelete = i;\n              break;\n            }\n          }\n          trackedElements = trackedElements.splice(toDelete, 1);\n        };\n\n        $scrollspy.activate = function(i) {\n          trackedElements[i].addClass('active');\n        };\n\n        // Initialize plugin\n\n        $scrollspy.init();\n        return $scrollspy;\n\n      }\n\n      return ScrollSpyFactory;\n\n    };\n\n  })\n\n  .directive('bsScrollspy', function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'EAC',\n      link: function postLink(scope, element, attr) {\n\n        var options = {scope: scope};\n        angular.forEach(['offset', 'target'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var scrollspy = $scrollspy(options);\n        scrollspy.trackElement(options.target, element);\n\n        scope.$on('$destroy', function() {\n          if (scrollspy) {\n            scrollspy.untrackElement(options.target, element);\n            scrollspy.destroy();\n          }\n          options = null;\n          scrollspy = null;\n        });\n\n      }\n    };\n\n  })\n\n\n  .directive('bsScrollspyList', function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'A',\n      compile: function postLink(element, attr) {\n        var children = element[0].querySelectorAll('li > a[href]');\n        angular.forEach(children, function(child) {\n          var childEl = angular.element(child);\n          childEl.parent().attr('bs-scrollspy', '').attr('data-target', childEl.attr('href'));\n        });\n      }\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      template: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok'\n    };\n\n    this.$get = function($window, $document, $rootScope, $tooltip) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory(element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        scope.$activeIndex = 0;\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function(index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function(matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function(index) {\n          if(options.multiple) {\n            scope.$activeIndex.sort();\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\n            if(options.sort) scope.$activeIndex.sort();\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function(index) {\n          var value = scope.$matches[index].value;\n          scope.$apply(function() {\n            $select.activate(index);\n            if(options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\n                return scope.$matches[index].value;\n              }));\n            } else {\n              controller.$setViewValue(value);\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index);\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function() {\n          if(controller.$modelValue && scope.$matches.length) {\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            }\n          } else if(scope.$activeIndex >= scope.$matches.length) {\n            scope.$activeIndex = options.multiple ? [] : 0;\n          }\n        };\n\n        $select.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function(index) {\n          if(options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          } else {\n            return scope.$activeIndex === index;\n          }\n        };\n\n        $select.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $select.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $select.$onKeyDown = function(evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Select with enter\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          // Navigate with keyboard\n          if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n          scope.$digest();\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function() {\n          _show();\n          if(options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          setTimeout(function() {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          });\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function() {\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Add support for select markup\n        if(element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper ngOptions\n        var parsedOptions = $parseOptions(attr.ngOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        // Watch ngOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected, index;\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function(value) {\n              index = select.$getIndex(value);\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected ? selected : attr.placeholder || defaults.placeholder) + defaults.caretHtml);\n        };\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.timepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.tooltip'])\n\n  .provider('$timepicker', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'timepicker',\n      placement: 'bottom-left',\n      template: 'timepicker/timepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      // lang: $locale.id,\n      useNative: true,\n      timeType: 'date',\n      timeFormat: 'shortTime',\n      modelTimeFormat: null,\n      autoclose: false,\n      minTime: -Infinity,\n      maxTime: +Infinity,\n      length: 5,\n      hourStep: 1,\n      minuteStep: 5,\n      iconUp: 'glyphicon glyphicon-chevron-up',\n      iconDown: 'glyphicon glyphicon-chevron-down',\n      arrowBehavior: 'pager'\n    };\n\n    this.$get = function($window, $document, $rootScope, $sce, $locale, dateFilter, $tooltip) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      if(!defaults.lang) defaults.lang = $locale.id;\n\n      function timepickerFactory(element, controller, config) {\n\n        var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $timepicker.$options;\n        var scope = $timepicker.$scope;\n\n        // View vars\n\n        var selectedIndex = 0;\n        var startDate = controller.$dateValue || new Date();\n        var viewDate = {hour: startDate.getHours(), meridian: startDate.getHours() < 12, minute: startDate.getMinutes(), second: startDate.getSeconds(), millisecond: startDate.getMilliseconds()};\n\n        var format = $locale.DATETIME_FORMATS[options.timeFormat] || options.timeFormat;\n        var formats = /(h+)([:\\.])?(m+)[ ]?(a?)/i.exec(format).slice(1);\n        scope.$iconUp = options.iconUp;\n        scope.$iconDown = options.iconDown;\n\n        // Scope methods\n\n        scope.$select = function(date, index) {\n          $timepicker.select(date, index);\n        };\n        scope.$moveIndex = function(value, index) {\n          $timepicker.$moveIndex(value, index);\n        };\n        scope.$switchMeridian = function(date) {\n          $timepicker.switchMeridian(date);\n        };\n\n        // Public methods\n\n        $timepicker.update = function(date) {\n          // console.warn('$timepicker.update() newValue=%o', date);\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\n            $timepicker.$date = date;\n            angular.extend(viewDate, {hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds(), millisecond: date.getMilliseconds()});\n            $timepicker.$build();\n          } else if(!$timepicker.$isBuilt) {\n            $timepicker.$build();\n          }\n        };\n\n        $timepicker.select = function(date, index, keep) {\n          // console.warn('$timepicker.select', date, scope.$mode);\n          if(!controller.$dateValue || isNaN(controller.$dateValue.getTime())) controller.$dateValue = new Date(1970, 0, 1);\n          if(!angular.isDate(date)) date = new Date(date);\n          if(index === 0) controller.$dateValue.setHours(date.getHours());\n          else if(index === 1) controller.$dateValue.setMinutes(date.getMinutes());\n          controller.$setViewValue(controller.$dateValue);\n          controller.$render();\n          if(options.autoclose && !keep) {\n            $timepicker.hide(true);\n          }\n        };\n\n        $timepicker.switchMeridian = function(date) {\n          var hours = (date || controller.$dateValue).getHours();\n          controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n          controller.$setViewValue(controller.$dateValue);\n          controller.$render();\n        };\n\n        // Protected methods\n\n        $timepicker.$build = function() {\n          // console.warn('$timepicker.$build() viewDate=%o', viewDate);\n          var i, midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n          var hours = [], hour;\n          for(i = 0; i < options.length; i++) {\n            hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n            hours.push({date: hour, label: dateFilter(hour, formats[0]), selected: $timepicker.$date && $timepicker.$isSelected(hour, 0), disabled: $timepicker.$isDisabled(hour, 0)});\n          }\n          var minutes = [], minute;\n          for(i = 0; i < options.length; i++) {\n            minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n            minutes.push({date: minute, label: dateFilter(minute, formats[2]), selected: $timepicker.$date && $timepicker.$isSelected(minute, 1), disabled: $timepicker.$isDisabled(minute, 1)});\n          }\n\n          var rows = [];\n          for(i = 0; i < options.length; i++) {\n            rows.push([hours[i], minutes[i]]);\n          }\n          scope.rows = rows;\n          scope.showAM = !!formats[3];\n          scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n          scope.timeSeparator = formats[1];\n          $timepicker.$isBuilt = true;\n        };\n\n        $timepicker.$isSelected = function(date, index) {\n          if(!$timepicker.$date) return false;\n          else if(index === 0) {\n            return date.getHours() === $timepicker.$date.getHours();\n          } else if(index === 1) {\n            return date.getMinutes() === $timepicker.$date.getMinutes();\n          }\n        };\n\n        $timepicker.$isDisabled = function(date, index) {\n          var selectedTime;\n          if(index === 0) {\n            selectedTime = date.getTime() + viewDate.minute * 6e4;\n          } else if(index === 1) {\n            selectedTime = date.getTime() + viewDate.hour * 36e5;\n          }\n          return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n        };\n\n        scope.$arrowAction = function (value, index) {\n          if (options.arrowBehavior === 'picker') {\n            $timepicker.$setTimeByStep(value,index);\n          } else {\n            $timepicker.$moveIndex(value,index);\n          }\n        };\n\n        $timepicker.$setTimeByStep = function(value, index) {\n          var newDate = new Date($timepicker.$date);\n          var hours = newDate.getHours(), hoursLength = dateFilter(newDate, 'h').length;\n          var minutes = newDate.getMinutes(), minutesLength = dateFilter(newDate, 'mm').length;\n          if (index === 0) {\n            newDate.setHours(hours - (parseInt(options.hourStep, 10) * value));\n          }\n          else {\n            newDate.setMinutes(minutes - (parseInt(options.minuteStep, 10) * value));\n          }\n          $timepicker.select(newDate, index, true);\n          parentScope.$digest();\n        };\n\n        $timepicker.$moveIndex = function(value, index) {\n          var targetDate;\n          if(index === 0) {\n            targetDate = new Date(1970, 0, 1, viewDate.hour + (value * options.length), viewDate.minute);\n            angular.extend(viewDate, {hour: targetDate.getHours()});\n          } else if(index === 1) {\n            targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + (value * options.length * options.minuteStep));\n            angular.extend(viewDate, {minute: targetDate.getMinutes()});\n          }\n          $timepicker.$build();\n        };\n\n        $timepicker.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          if(evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $timepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Close on enter\n          if(evt.keyCode === 13) return $timepicker.hide(true);\n\n          // Navigate with keyboard\n          var newDate = new Date($timepicker.$date);\n          var hours = newDate.getHours(), hoursLength = dateFilter(newDate, 'h').length;\n          var minutes = newDate.getMinutes(), minutesLength = dateFilter(newDate, 'mm').length;\n          var lateralMove = /(37|39)/.test(evt.keyCode);\n          var count = 2 + !!formats[3] * 1;\n\n          // Navigate indexes (left, right)\n          if (lateralMove) {\n            if(evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1;\n            else if(evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n          }\n\n          // Update values (up, down)\n          var selectRange = [0, hoursLength];\n          if(selectedIndex === 0) {\n            if(evt.keyCode === 38) newDate.setHours(hours - parseInt(options.hourStep, 10));\n            else if(evt.keyCode === 40) newDate.setHours(hours + parseInt(options.hourStep, 10));\n            selectRange = [0, hoursLength];\n          } else if(selectedIndex === 1) {\n            if(evt.keyCode === 38) newDate.setMinutes(minutes - parseInt(options.minuteStep, 10));\n            else if(evt.keyCode === 40) newDate.setMinutes(minutes + parseInt(options.minuteStep, 10));\n            selectRange = [hoursLength + 1, hoursLength + 1 + minutesLength];\n          } else if(selectedIndex === 2) {\n            if(!lateralMove) $timepicker.switchMeridian();\n            selectRange = [hoursLength + 1 + minutesLength + 1, hoursLength + 1 + minutesLength + 3];\n          }\n          $timepicker.select(newDate, selectedIndex, true);\n          createSelection(selectRange[0], selectRange[1]);\n          parentScope.$digest();\n        };\n\n        // Private\n\n        function createSelection(start, end) {\n          if(element[0].createTextRange) {\n            var selRange = element[0].createTextRange();\n            selRange.collapse(true);\n            selRange.moveStart('character', start);\n            selRange.moveEnd('character', end);\n            selRange.select();\n          } else if(element[0].setSelectionRange) {\n            element[0].setSelectionRange(start, end);\n          } else if(angular.isUndefined(element[0].selectionStart)) {\n            element[0].selectionStart = start;\n            element[0].selectionEnd = end;\n          }\n        }\n\n        function focusElement() {\n          element[0].focus();\n        }\n\n        // Overrides\n\n        var _init = $timepicker.init;\n        $timepicker.init = function() {\n          if(isNative && options.useNative) {\n            element.prop('type', 'time');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if(isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n\n        var _destroy = $timepicker.destroy;\n        $timepicker.destroy = function() {\n          if(isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n\n        var _show = $timepicker.show;\n        $timepicker.show = function() {\n          _show();\n          setTimeout(function() {\n            $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $timepicker.$onKeyDown);\n            }\n          });\n        };\n\n        var _hide = $timepicker.hide;\n        $timepicker.hide = function(blur) {\n          $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $timepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n\n        return $timepicker;\n\n      }\n\n      timepickerFactory.defaults = defaults;\n      return timepickerFactory;\n\n    };\n\n  })\n\n\n  .directive('bsTimepicker', function($window, $parse, $q, $locale, dateFilter, $timepicker, $dateParser, $timeout) {\n\n    var defaults = $timepicker.defaults;\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, controller: controller};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'timeType', 'timeFormat', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'length', 'arrowBehavior'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!timepicker || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(timepicker),?');\n          newValue === true ? timepicker.show() : timepicker.hide();\n        });\n\n        // Initialize timepicker\n        if(isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n        var timepicker = $timepicker(element, controller, options);\n        options = timepicker.$options;\n\n        // Initialize parser\n        var dateParser = $dateParser({format: options.timeFormat, lang: options.lang});\n\n        // Observe attributes for changes\n        angular.forEach(['minTime', 'maxTime'], function(key) {\n          // console.warn('attr.$observe(%s)', key, attr[key]);\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\n            if(newValue === 'now') {\n              timepicker.$options[key] = new Date().setFullYear(1970, 0, 1);\n            } else if(angular.isString(newValue) && newValue.match(/^\".+\"$/)) {\n              timepicker.$options[key] = +new Date(newValue.substr(1, newValue.length - 2));\n            } else {\n              timepicker.$options[key] = dateParser.parse(newValue, new Date(1970, 0, 1, 0));\n            }\n            !isNaN(timepicker.$options[key]) && timepicker.$build();\n          });\n        });\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue, controller.$dateValue);\n          timepicker.update(controller.$dateValue);\n        }, true);\n\n        // viewValue -> $parsers -> modelValue\n        controller.$parsers.unshift(function(viewValue) {\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\n          // Null values should correctly reset the model value & validity\n          if(!viewValue) {\n            controller.$setValidity('date', true);\n            return;\n          }\n          var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n          if(!parsedTime || isNaN(parsedTime.getTime())) {\n            controller.$setValidity('date', false);\n          } else {\n            var isValid = parsedTime.getTime() >= options.minTime && parsedTime.getTime() <= options.maxTime;\n            controller.$setValidity('date', isValid);\n            // Only update the model when we have a valid date\n            if(isValid) controller.$dateValue = parsedTime;\n          }\n          if(options.timeType === 'string') {\n            return dateFilter(parsedTime, options.modelTimeFormat || options.timeFormat);\n          } else if(options.timeType === 'number') {\n            return controller.$dateValue.getTime();\n          } else if(options.timeType === 'iso') {\n            return controller.$dateValue.toISOString();\n          } else {\n            return new Date(controller.$dateValue);\n          }\n        });\n\n        // modelValue -> $formatters -> viewValue\n        controller.$formatters.push(function(modelValue) {\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n          var date;\n          if(angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if(angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if(options.timeType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n          } else {\n            date = new Date(modelValue);\n          }\n          // Setup default value?\n          // if(isNaN(date.getTime())) date = new Date(new Date().setMinutes(0) + 36e5);\n          controller.$dateValue = date;\n          return controller.$dateValue;\n        });\n\n        // viewValue -> element\n        controller.$render = function() {\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\n          element.val(!controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : dateFilter(controller.$dateValue, options.timeFormat));\n        };\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (timepicker) timepicker.destroy();\n          options = null;\n          timepicker = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tab', [])\n\n  .provider('$tab', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      template: 'tab/tab.tpl.html',\n      navClass: 'nav-tabs',\n      activeClass: 'active'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      // Publish options on scope\n      $scope.$navClass = self.$options.navClass;\n      $scope.$activeClass = self.$options.activeClass;\n\n      self.$panes = $scope.$panes = [];\n\n      self.$viewChangeListeners = [];\n\n      self.$push = function(pane) {\n        self.$panes.push(pane);\n      };\n\n      self.$panes.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        self.$panes.$active = value;\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $tab = {};\n      $tab.defaults = defaults;\n      $tab.controller = controller;\n      return $tab;\n    };\n\n  })\n\n  .directive('bsTabs', function($window, $animate, $tab) {\n\n    var defaults = $tab.defaults;\n\n    return {\n      require: ['?ngModel', 'bsTabs'],\n      transclude: true,\n      scope: true,\n      controller: $tab.controller,\n      templateUrl: function(element, attr) {\n        return attr.template || defaults.template;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        if(ngModelCtrl) {\n\n          // Update the modelValue following\n          bsTabsCtrl.$viewChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsTabsCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n      }\n    };\n\n  })\n\n  .directive('bsPane', function($window, $animate, $sce) {\n\n    return {\n      require: ['^?ngModel', '^bsTabs'],\n      scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('tab-pane');\n\n        // Observe title attribute for change\n        attrs.$observe('title', function(newValue, oldValue) {\n          scope.title = $sce.trustAsHtml(newValue);\n        });\n\n        // Add animation class\n        if(bsTabsCtrl.$options.animation) {\n          element.addClass(bsTabsCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsTabs controller\n        bsTabsCtrl.$push(scope);\n\n        function render() {\n          var index = bsTabsCtrl.$panes.indexOf(scope);\n          var active = bsTabsCtrl.$panes.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n        }\n\n        bsTabsCtrl.$viewChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      template: 'tooltip/tooltip.tpl.html',\n      contentTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, dimensions, $$rAF) {\n\n      var trim = String.prototype.trim;\n      var isTouch = 'createTouch' in $window.document;\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function TooltipFactory(element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var nodeName = element[0].nodeName.toLowerCase();\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        $tooltip.$promise = fetchTemplate(options.template);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(options.delay && angular.isString(options.delay)) {\n          options.delay = parseFloat(options.delay);\n        }\n\n        // Support scope as string options\n        if(options.title) {\n          $tooltip.$scope.title = options.title;\n        }\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $tooltip.toggle();\n          });\n        };\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout, hoverState;\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $tooltip.$promise = $tooltip.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]);\n              if(!contentEl.length) contentEl = findElement('[ng-bind=\"title\"]', templateEl[0]);\n              contentEl.removeAttr('ng-bind').html(contentTemplate);\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize tooltip\n        var tipLinker, tipElement, tipTemplate, tipContainer;\n        $tooltip.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          tipTemplate = template;\n          tipLinker = $compile(template);\n          $tooltip.init();\n        });\n\n        $tooltip.init = function() {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if(options.container === 'self') {\n            tipContainer = element;\n          } else if(angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if(options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function(trigger) {\n            if(trigger === 'click') {\n              element.on('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          });\n\n          // Options: target\n          if(options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              options.trigger === 'focus' ? element[0].focus() : $tooltip.show();\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function() {\n\n          // Unbind events\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if(trigger === 'click') {\n              element.off('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          }\n\n          // Remove element\n          if(tipElement) {\n            tipElement.remove();\n            tipElement = null;\n          }\n\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function() {\n            if (hoverState ==='in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function() {\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          var parent = options.container ? tipContainer : null;\n          var after = options.container ? null : element;\n\n          // Hide any existing tipElement\n          if(tipElement) tipElement.remove();\n          // Fetch a cloned element linked from template\n          tipElement = $tooltip.$element = tipLinker(scope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', display: 'block', visibility: 'hidden'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if(options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if(options.customClass) tipElement.addClass(options.customClass);\n\n          $animate.enter(tipElement, parent, after, function() {\n            scope.$emit(options.prefixEvent + '.show', $tooltip);\n          });\n          $tooltip.$isShown = scope.$isShown = true;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n          $$rAF(function () {\n            $tooltip.$applyPlacement();\n\n            // Once placed, make the tooltip visible\n            tipElement.css({visibility: 'visible'});\n          }); // var a = bodyEl.offsetWidth + 1; ?\n\n          // Bind events\n          if(options.keyboard) {\n            if(options.trigger !== 'focus') {\n              $tooltip.focus();\n              tipElement.on('keyup', $tooltip.$onKeyUp);\n            } else {\n              element.on('keyup', $tooltip.$onFocusKeyUp);\n            }\n          }\n\n        };\n\n        $tooltip.leave = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        $tooltip.hide = function(blur) {\n\n          if(!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n\n          $animate.leave(tipElement, function() {\n            scope.$emit(options.prefixEvent + '.hide', $tooltip);\n\n            // Allow to blur the input when hidden, like when pressing enter key\n            if(blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n          });\n\n          $tooltip.$isShown = scope.$isShown = false;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n\n          // Unbind events\n          if(options.keyboard && tipElement !== null) {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          }\n\n        };\n\n        $tooltip.toggle = function() {\n          $tooltip.$isShown ? $tooltip.leave() : $tooltip.enter();\n        };\n\n        $tooltip.focus = function() {\n          tipElement[0].focus();\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function() {\n          if(!tipElement) return;\n\n          // Get the position of the tooltip element.\n          var elementPosition = getPosition();\n\n          // Get the height and width of the tooltip so we can center it.\n          var tipWidth = tipElement.prop('offsetWidth'),\n              tipHeight = tipElement.prop('offsetHeight');\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(options.placement, elementPosition, tipWidth, tipHeight);\n\n          // Now set the calculated positioning.\n          tipPosition.top += 'px';\n          tipPosition.left += 'px';\n          tipElement.css(tipPosition);\n\n        };\n\n        $tooltip.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function(evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          $tooltip.$isShown ? element[0].blur() : element[0].focus();\n        };\n\n        // Private methods\n\n        function getPosition() {\n          if(options.container === 'body') {\n            return dimensions.offset(options.target[0] || element[0]);\n          } else {\n            return dimensions.position(options.target[0] || element[0]);\n          }\n        }\n\n        function getCalculatedOffset(placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n          case 'right':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left + position.width\n            };\n            break;\n          case 'bottom':\n            offset = {\n              top: position.top + position.height,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          case 'left':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left - actualWidth\n            };\n            break;\n          default:\n            offset = {\n              top: position.top - actualHeight,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          }\n\n          if(!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if(split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n            case 'left':\n              offset.left = position.left;\n              break;\n            case 'right':\n              offset.left =  position.left + position.width - actualWidth;\n            }\n          } else if(split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n            case 'top':\n              offset.top = position.top - actualHeight;\n              break;\n            case 'bottom':\n              offset.top = position.top + position.height;\n            }\n          }\n\n          return offset;\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      function fetchTemplate(template) {\n        return $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        });\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function($window, $location, $sce, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'type', 'customClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Observe scope attributes for change\n        angular.forEach(['title'], function(key) {\n          attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && $$rAF(function() {\n              tooltip && tooltip.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsTooltip && scope.$watch(attr.bsTooltip, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.title = newValue;\n          }\n          angular.isDefined(oldValue) && $$rAF(function() {\n            tooltip && tooltip.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!tooltip || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(tooltip),?');\n          newValue === true ? tooltip.show() : tooltip.hide();\n        });\n\n        // Initialize popover\n        var tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if(tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.typeahead', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$typeahead', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'typeahead',\n      prefixEvent: '$typeahead',\n      placement: 'bottom-left',\n      template: 'typeahead/typeahead.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      minLength: 1,\n      filter: 'filter',\n      limit: 6\n    };\n\n    this.$get = function($window, $rootScope, $tooltip) {\n\n      var bodyEl = angular.element($window.document.body);\n\n      function TypeaheadFactory(element, controller, config) {\n\n        var $typeahead = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $typeahead = $tooltip(element, options);\n        var parentScope = config.scope;\n        var scope = $typeahead.$scope;\n\n        scope.$resetMatches = function(){\n          scope.$matches = [];\n          scope.$activeIndex = 0;\n        };\n        scope.$resetMatches();\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $typeahead.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $typeahead.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $typeahead.$isVisible();\n        };\n\n        // Public methods\n\n        $typeahead.update = function(matches) {\n          scope.$matches = matches;\n          if(scope.$activeIndex >= matches.length) {\n            scope.$activeIndex = 0;\n          }\n        };\n\n        $typeahead.activate = function(index) {\n          scope.$activeIndex = index;\n        };\n\n        $typeahead.select = function(index) {\n          var value = scope.$matches[index].value;\n          controller.$setViewValue(value);\n          controller.$render();\n          scope.$resetMatches();\n          if(parentScope) parentScope.$digest();\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index);\n        };\n\n        // Protected methods\n\n        $typeahead.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return !!scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && angular.isString(controller.$viewValue) && controller.$viewValue.length >= options.minLength;\n        };\n\n        $typeahead.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $typeahead.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown\n          evt.preventDefault();\n          evt.stopPropagation();\n        };\n\n        $typeahead.$onKeyDown = function(evt) {\n          if(!/(38|40|13)/.test(evt.keyCode)) return;\n\n          // Let ngSubmit pass if the typeahead tip is hidden\n          if($typeahead.$isVisible()) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // Select with enter\n          if(evt.keyCode === 13 && scope.$matches.length) {\n            $typeahead.select(scope.$activeIndex);\n          }\n\n          // Navigate with keyboard\n          else if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n          scope.$digest();\n        };\n\n        // Overrides\n\n        var show = $typeahead.show;\n        $typeahead.show = function() {\n          show();\n          setTimeout(function() {\n            $typeahead.$element.on('mousedown', $typeahead.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $typeahead.$onKeyDown);\n            }\n          });\n        };\n\n        var hide = $typeahead.hide;\n        $typeahead.hide = function() {\n          $typeahead.$element.off('mousedown', $typeahead.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $typeahead.$onKeyDown);\n          }\n          hide();\n        };\n\n        return $typeahead;\n\n      }\n\n      TypeaheadFactory.defaults = defaults;\n      return TypeaheadFactory;\n\n    };\n\n  })\n\n  .directive('bsTypeahead', function($window, $parse, $q, $typeahead, $parseOptions) {\n\n    var defaults = $typeahead.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'filter', 'limit', 'minLength', 'watchOptions', 'selectMode'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Build proper ngOptions\n        var filter = options.filter || defaults.filter;\n        var limit = options.limit || defaults.limit;\n        var ngOptions = attr.ngOptions;\n        if(filter) ngOptions += ' | ' + filter + ':$viewValue';\n        if(limit) ngOptions += ' | limitTo:' + limit;\n        var parsedOptions = $parseOptions(ngOptions);\n\n        // Initialize typeahead\n        var typeahead = $typeahead(element, controller, options);\n\n        // Watch options on demand\n        if(options.watchOptions) {\n          // Watch ngOptions values before filtering for changes, drop function calls\n          var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').replace(/\\(.*\\)/g, '').trim();\n          scope.$watch(watchedOptions, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n            parsedOptions.valuesFn(scope, controller).then(function (values) {\n              typeahead.update(values);\n              controller.$render();\n            });\n          }, true);\n        }\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('$watch', element.attr('ng-model'), newValue);\n          scope.$modelValue = newValue; // Publish modelValue on scope for custom templates\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            // Prevent input with no future prospect if selectMode is truthy\n            // @TODO test selectMode\n            if(options.selectMode && !values.length && newValue.length > 0) {\n              controller.$setViewValue(controller.$viewValue.substring(0, controller.$viewValue.length - 1));\n              return;\n            }\n            if(values.length > limit) values = values.slice(0, limit);\n            var isVisible = typeahead.$isVisible();\n            isVisible && typeahead.update(values);\n            // Do not re-queue an update if a correct value has been selected\n            if(values.length === 1 && values[0].value === newValue) return;\n            !isVisible && typeahead.update(values);\n            // Queue a new rendering that will leverage collection loading\n            controller.$render();\n          });\n        });\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          if(controller.$isEmpty(controller.$viewValue)) return element.val('');\n          var index = typeahead.$getIndex(controller.$modelValue);\n          var selected = angular.isDefined(index) ? typeahead.$scope.$matches[index].label : controller.$viewValue;\n          selected = angular.isObject(selected) ? selected.label : selected;\n          element.val(selected.replace(/<(?:.|\\n)*?>/gm, '').trim());\n        };\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (typeahead) typeahead.destroy();\n          options = null;\n          typeahead = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}